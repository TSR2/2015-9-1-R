{
    "contents" : "########################???ճt?ץ?\nRprof()\ninvisible(  mstep(a=1,b=1,m=31,n=1000)  )\nRprof(NULL)\nsummaryRprof()\n###############################################??\n\ncreatebeta=function(n=200,v=0.1){\n  ff=function(x,v,uni){x^v*(2-x)^v-uni}\n  bb=0\n  uu=0\n  for (i in 1:n){\n    uni=runif(1)\n    uu[i]=uni\n    pp=uniroot(ff,c(0,1),v=v,uni=uni,tol=0.00000000000000000000001)\n    bb[i]=pp[[1]]\n  }\n  rb=bb\n}\nrb=createbeta(200,0.1)\n\n#######  1 failure strategies for\n######### t=1 is TL disbution\n######### t=0 is beta disbution\nkfail=function(a=1,b=1,n=100,alpha=0.1,t=1){\n  if (t==1){rb=createbeta(n,alpha)}\n  else {rb=rbeta(n = n,shape1 = a,shape2 = b)}\n  list=c()\n  p=0\n  count=0\n  for (i in 1:n){\n    taget=rb[i]\n    if (length(list)>=n){break}\n    for (j in 1:n){\n      if (length(list)>=n){break}\n      ru=runif(n)\n      p=ifelse(test = taget>=ru[j],\"S\",\"F\")\n      list=c(list,p)\n      if (taget<ru[j]) {break}\n    }\n  }\n  list\n  count=sum(list==\"F\")/n\n  list(log=list,persent=count)\n}\nv=0\nfor (i in 1:100){\n  a=kfail(a=1,b=1,n=200,t=1)$persent\n  v=v+a\n}\nv/100\n########################################## k failrue parllce\nlibrary(magrittr)\nlibrary(dplyr)\ndetet=function(x,n=100){\n  ru=runif(n)\n  v=ifelse(x>=ru,\"s\",\"f\")\n}\n\npark=function(a,b,n){\n  rb=rbeta(n,a,b)\n  total=sapply(rb,FUN = detet)\n}\n\nn=100\nf=park(1,1,100)\nf=t(f)\ndd=which(f==\"f\",arr.ind = T)\ndd=as.data.frame(dd)\ncc=dd %>% group_by(row) %>% summarise(min=min(col))\nvv=cumsum(cc$min)\nnames(vv) <- 1: 100\nmm=names(vv[vv>=100])[1]\nmm=as.numeric(mm)\n(mm-1)/n\n#######################################\n\n############# m strategies\n\na=1;b=1;m=3;n=100\nmstep=function(a,b,m,n,alpha=0.1,t=1){\n  if (t==1){rb=createbeta(n,alpha)}\n  else {rb=rbeta(n = n,shape1 = a,shape2 = b)}\n  list=c()\n  mtotal=c()\n  p=0\n  count=0\n  for (i in 1:n){\n    taget=rb[i]\n    scount=0\n    if (length(list)>=n){break}\n    for (j in 1:n){\n      if (length(list)>=n){break}\n      ###?p?G?????u?????Ƥj??m,?h???X???\\?v?̰??????U?h\n      if (length(mtotal)==m) {taget=rb[which.max(mtotal)]} \n      ru=runif(n)\n      ###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F\n      if (taget>=ru[j]) p=\"S\"\n      else p=\"F\"\n      ###?????C???????????G\n      list=c(list,p)\n      ###?֭p?Ӥ??u???\\??????\n      if (taget>=ru[j]) {scount=scount+1}\n      ####?ϥΪ????u?bm?ӥH?U?A?ӥB?Ӧ??????O???Ѫ??A?O???U?Ӧ??????????\\?`????\n      if (taget<ru[j] & length(mtotal)<m) {\n        mtotal=c(mtotal,scount)\n        break\n      }\n    }\n  }\n  persent=sum(list==\"F\")/n\n  list(list,persent,mtotal)\n}\n\n\nv=rep(0,1000)\nfor (i in 1:1000){\n  v[i]=mstep(a=1,b=1,m=44,t=1,n=200)[[2]]  \n}\nmean(v)\n\ntotallist[[2]]\n\n#################################### reduce m run\n\nmreducestep=function(a,b,m,n,alpha=0.1,t=1){\n  if (t==1){rb=createbeta(n,alpha)}\n  else {rb=rbeta(n = n,shape1 = a,shape2 = b)}\n  list=c()\n  mtotal=c()\n  p=0\n  count=0\n  for (i in 1:n){\n    taget=rb[i]\n    scount=0\n    if (length(list)>=n){break}\n    for (j in 1:n){\n      if (length(list)>=n){break}\n      ru=runif(n)\n      ###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F\n      p=ifelse(test = taget>=ru[j],\"S\",\"F\")\n      ###?????C???????????G\n      list=c(list,p)\n      ###?֭p?Ӥ??u???\\??????\n      if (taget>ru[j]) {\n        scount=scount+1\n      }else{\n        ####?ϥΪ????u?bm?ӥH?U?A?ӥB?Ӧ??????O???Ѫ??A?O???U?Ӧ??????????\\?`????\n        mtotal=c(mtotal,scount)\n        ######???u???\\?Ƥ???m?A?????u\n        if (scount<m) break\n      }\n    }\n  }\n  persent=sum(list==\"F\")/n\n  list(list,persent,mtotal)\n}\n\nmreducestep(a=1,b=1,m=9,n=100)\n\n\nv=rep(0,1000)\nfor (i in 1:1000){\n  v[i]=mreducestep(a=1,b=1,t=1,m=4,n=200)[[2]]  \n}\nmean(v)\n\n\n#跑???次\n###############################################################\n\nttest=list(c(200,4),c(500,5),c(1000,6))\nttest=list(c(100,4),c(100,5),c(100,6))\nbb=c()\nrun=100\nv=rep(0,run)\nfor (j in ttest){  \n  for (i in 1:run){\n    v[i]=mreducestep(a=1,b=1,t=1,m=j[2],n=j[1])[[2]]  \n  }\n  bb=c(bb,mean(v))\n}\nbb\n\n##################################### N\nNkfail=function(a,b,n,N,alpha=0.1,t=1){\n  if (t==1){rb=createbeta(n,alpha)}\n  else {rb=rbeta(n = n,shape1 = a,shape2 = b)}\n  list=c()\n  p=0;count=0\n  for (i in 1:n){\n    taget=rb[i]\n    if (length(list)>=n){break}\n    for (j in 1:n){\n      if (length(list)>=n){break}\n      ru=runif(n)\n      p=ifelse(test = taget>=ru[j],\"S\",\"F\")\n      list=c(list,p)\n      if (length(list)==N & p=='S') {next}\n      if (taget<ru[j] & length(list)<N) {break}\n    }\n  }\n  list\n  count=sum(list==\"F\")/n\n  list(log=list,persent=count)\n}\nNkfail(a=1,b=1,n=100,N=50)\n\nv=rep(0,500)\nfor (i in 1:500){\n  v[i]=Nkfail(a=1,b=1,n=1000,N=31,t=0)[[2]]  \n}\nmean(v)\n\n\n\n\n\n\n###################################### new N\nNkfail=function(a,b,n,N,alpha=0.1,t=1){\n  if (t==1){rb=createbeta(n,alpha)}\n  else {rb=rbeta(n = n,shape1 = a,shape2 = b)}\n  list=c()\n  mtotal=c()\n  p=0\n  count=0\n  #####x=1?O?N???٥????????????????u,x=0?O?N???????F\n  x=1\n  for (i in 1:n){\n    taget=rb[i]\n    scount=0\n    if (length(list)>=n){break}\n    for (j in 1:n){\n      if (length(list)>=n){break}\n      #####?b?j??N?H???A?Ĥ@???X?{F?A?P?_???\\?v?̰??????u\n      if (length(mtotal)>=N & p==\"F\" & x==1) {taget=rb[which.max(mtotal)];x=0}\n      ru=runif(n)\n      ###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F\n      if (taget>=ru[j]) {\n        p=\"S\"\n        scount=scount+1\n      }\n      else p=\"F\"\n      ###?????C???????????G\n      list=c(list,p)\n      if (taget<ru[j] & x==1) {\n        mtotal=c(mtotal,scount)\n        break\n      }\n    }\n  }\n  persent=sum(list==\"F\")/n\n  list(list,persent,mtotal)\n}\n\nNkfail(a=1,b=1,n=100,N=50)\n\ng=calculateN(1,1,100,9)\nv=rep(0,500)\nfor (i in 1:500){\n  v[i]=Nkfail(a=1,b=1,n=1000,alpha = 0.9,N=31,t=0)[[2]]  \n}\nmean(v)\n\n\n#########################################run function\nruns=function(run,fun,...){\n  v=rep(0,run)\n  for (i in 1:run){\n    v[i]=fun(...)[[2]]  \n  }\n  mean(v)\n}\nruns(100,fun=Nkfail,a=1,b=1,n=1000,N=31,t=0)\n\n\n\n#############################?p??N??\na=1;b=1;n=100;m=9;\ncalculateN=function(a,b,n,m){\n  bb=beta(a=a+(0:(n-1)),b=b)\n  N=(sum(bb)*m)/beta(a,b)\n}\n\ng=calculateN(1,1,100,9)\n\n###403??\n###1.m-run\n###2.N-learning\n###3.non recalling m-run (un=m)\n####?????̪?mn?O?ڭn?Ϊ?m??\n####Kn=m\n\n##############################################\n\nbw=function(a,b,x,u){\n  expression( x^(a-1)*(1-x)^(b-1))\n}\nbw\n\nbeint=function(a=0.1,b=1,u=1/2){\n  integrate(f= function(x) x^(a-1)*(1-x)^(b-1) ,lower=0,upper=u)\n}\n############################calculate TL rn,kn,Nn\nEX=function(a){\n  1-4^a*(gamma(1+a)^2/gamma(2+2*a))\n}\nEX2=function(a){\n  (2+a/1+a)-2^(1+2*a)*(gamma(1+a)^2/gamma(2+2*a))\n}\nbetamean=function(a,b){\n  a/(a+b)\n}\nbetavar=function(a,b){\n  (a*b)/((a+b)^2*(a+b+1))\n}\nsol=function(a,b,aphla){\n  betamean(a,b)-EX(aphla)\n}\n\nuniroot(f = sol,a=1,aphla=0.9,interval = c(0,5),tol=0.001)\n\nTL=function(x,a,j){\n  x^j*2*a*(1 - x)*x^(a-1)*(2 - x)^(a-1)\n}\naaa=function(a,j){\n  integrate(TL,lower = 0,upper = 1,a=a,j=j)[[1]]\n}\n\nn=100;a=0.9\nrn=(2*n*a)^(1/3)\nkn=((n*sqrt(pi))/(4*sqrt(a)))^(2/3)\nkn=floor(kn)\nNn=kn*sum(sapply(0:(n-1),aaa,a=0.9))\n\n################################################\n\nEXJ=function(j=2,a=0.1){\n  EXJ=2^(j+2*a)*a*(beint(a=j+a,b=a,u=1/2)[[1]]-2*beint(a=1+j+a,b=a,u=1/2)[[1]])\n}\nx=EXJ()\nx\n\nintegrand <- function(x) {1/((x+1)*sqrt(x))}\nintegrate(integrand, lower = 0, upper = Inf)\n\n################################################################\nk=ifail(a=1,b=1,n=100)\nruns(run = 500,fun = ifail,a=1,b=1,n=100)\n\nf=createbeta(n = 200,v = 0.9)\nmf=mean(f)\nvf=var(f)\n######求 meanTL=meanBETA ,varTL=varBETA 時的 a,b\nff=function(z){\n  x=z[1]\n  y=z[2]\n  (x/(x+y)-mf)^2+((x*y)/((x+y)^2*(x+y+1))-vf)^2\n}\nll=nlm(ff,p = c(1,2),gradtol = 1e-20)\njj=optim(c(1,2),ff)\nb1=ll[[2]][1]\nb2=ll[[2]][2]\nmf\nb1/(b1+b2)\nvf\n(b1*b2)/((b1+b2)^2*(b1+b2+1))\n###meanTL=meanBETA ,varTL=varBETA\nruns(run = 200,fun = mstep,a=b1,b=b2,m=kn,n=500)\nruns(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)\n\n\nbb=function(a,b){\n  a/(a+b)-mf\n}\na=0.5\nmm=uniroot(bb,c(0,10),a=a)\nmm$root\nbetavar(a,mm$root)\nvf\n##varTL<varBETA\nruns(run = 200,fun = mstep,a=0.5,b=mm$root,m=kn,n=500)\nruns(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)\n\n##varTL>varBETA\na=2\nmm=uniroot(bb,c(0,10),a=a)\nmm$root\nbetavar(a,mm$root)\nvf\n\nruns(run = 200,fun = mstep,a=a,b=mm$root,m=kn,n=500)\nruns(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)",
    "created" : 1446513447349.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2819515383",
    "id" : "F2FA734B",
    "lastKnownWriteTime" : 1446521492,
    "path" : "C:/Users/tsr/Desktop/2015-9-1-R/bayes code/bayes/bayes.R",
    "project_path" : "bayes.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}