mm=uniroot(bb,c(0,10),a=a)
mm$root
betavar(a,mm$root)
vf
runs(run = 200,fun = mstep,a=a,b=mm$root,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
sample(1:50)
sample(1:50,1)
sample(1:50,2)
sample(1:50,1)
sample(1:50,2)
sample(1:50,2)
a=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\new  5.txt",sep="/t")
a=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\new  5.txt",sep="\t")
b=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\
new  51.txt")
b=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\
new  51.txt",sep=" ")
a=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\\
new  5.txt",sep="\t")
b=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\\
new  51.txt",sep=" ")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\
new5.txt",sep="\t")
b=read.table("C:\Users\tsr\Desktop\ddd\\
new51.txt",sep=" ")
b=read.table("C:\Users\tsr\Desktop\ddd\\
new51.txt")
)
.
h
i
))]
}|
b=read.table("C:\Users\tsr\Desktop\ddd\\
new51.txt")
''
"
b=read.table(file="C:\Users\tsr\Desktop\ddd\\
new51.txt")
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\
new51.txt")
"
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",sep="\t")
a
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",sep="/t")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",sep="\t")
a
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
b
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",sep="\t")
a
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt")
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
a
?read.table
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",encoding ="UTF-8" )
a
library(readr)
a=read_table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",encoding ="UTF-8")
a=read_table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt")
a
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",encoding ="UTF-8" )
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
a$V1=as.character( a$V1)
a
b$V1=as.character( b$V1)
b
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",encoding ="UTF-8" )
a$V1=as.character( a$V1)
a$V1
a
b
merge(a,b,by = V1)
a
b
merge(a,b,by.x = V1,by.y = V1)
merge(a,b)
library(plyr)
join(a,b,"V1")
merge(a,b,by = "V!")
merge(a,b,by = "V1")
p=merge(a,b,by = "V1")
write(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt")
write(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt",sep = " ")
p
write.csv(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt")
write.csv(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt",row.names = F,col.names = F)
write.csv(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt",row.names = F,col.names = F)
?glm
glm(iris[,5]~.,family = "log")
glm(iris[,5]~.,family = "poisson")
glm(iris[,5]~.,family = "poisson",data=iris)
glm(iris[,5]~.,family = "binomial",data=iris)
glm(Species~.,family = "binomial",data=iris)
glm(Species~.,family = "poisson",data=iris)
??roc
library(foreign)
x=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav")
x[1,]
x=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav",
to.data.frame=T)
head(x)
table(x$race,x$smoke)
p=table(x$race,x$smoke)
chisq.test(x =p)
head(x)
kk=chisq.test(x =p)
names(kk)
str(kk)
glm(ui~race,family = "binomial",data=x)
pp=table(x$smoke,x$low)
kk=chisq.test(x =pp)
kk
x1=x[x$smoke==0,]
x2=x[x$smoke==1,]
chisq.test(x=table(x1$smoke,x1$low))
chisq.test(x=table(x2$smoke,x2$low))
glm(low~race+smoke,family = "binomial",data=x)
kk=lm(low~smoke,data=x)
summary(kk)
is(x$smoke)
kk=lm(low~as.factor(smoke),data=x)
summary(kk)
as.factor(x$smoke)
o=as.factor(x$smoke)
kk=lm(low~o,data=x)
summary(kk)
o=as.factor(x$race)
kk=lm(low~o,data=x)
summary(kk)
kk=lm(low~race,data=x)
summary(kk)
kk=lm(low~smoke+o,data=x)
summary(kk)
glm(low~smoke+o,family = "",data=x)
glm(low~smoke+o,family = "binomial",data=x)
createbeta=function(n=200,v=0.1){
ff=function(x,v,uni){x^v*(2-x)^v-uni}
bb=0
uu=0
for (i in 1:n){
uni=runif(1)
uu[i]=uni
pp=uniroot(ff,c(0,1),v=v,uni=uni,tol=0.00000000000000000000001)
bb[i]=pp[[1]]
}
rb=bb
}
#####################
kfail=function(a=1,b=1,n=100,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
p=ifelse(test = taget>=ru[j],"S","F")
list=c(list,p)
if (taget<ru[j]) {break}
}
}
list
count=sum(list=="F")/n
list(log=list,persent=count)
}
####################################
mstep=function(a,b,m,n,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
###?p?G?????u?????Ƥj??m,?h???X???\?v?̰??????U?h
if (length(mtotal)==m) {taget=rb[which.max(mtotal)]}
ru=runif(n)
###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F
if (taget>=ru[j]) p="S"
else p="F"
###?????C???????絲?G
list=c(list,p)
###?֭p?Ӥ??u???\??????
if (taget>=ru[j]) {scount=scount+1}
####?ϥΪ????u?bm?ӥH?U?A?ӥB?Ӧ??????O???Ѫ??A?O???U?Ӧ????窺???\?`????
if (taget<ru[j] & length(mtotal)<m) {
mtotal=c(mtotal,scount)
break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
####################################
mreducestep=function(a,b,m,n,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F
p=ifelse(test = taget>=ru[j],"S","F")
###?????C???????絲?G
list=c(list,p)
###?֭p?Ӥ??u???\??????
if (taget>ru[j]) {
scount=scount+1
}else{
####?ϥΪ????u?bm?ӥH?U?A?ӥB?Ӧ??????O???Ѫ??A?O???U?Ӧ????窺???\?`????
mtotal=c(mtotal,scount)
######???u???\?Ƥ???m?A?????u
if (scount<m) break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
##########################################
Nkfail=function(a,b,n,N,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
mtotal=c()
p=0
count=0
#####x=1?O?N???٥????찵?쩳?????u,x=0?O?N???????F
x=1
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
#####?b?j??N?H???A?Ĥ@???X?{F?A?P?_???\?v?̰??????u
if (length(mtotal)>=N & p=="F" & x==1) {taget=rb[which.max(mtotal)];x=0}
ru=runif(n)
###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F
if (taget>=ru[j]) {
p="S"
scount=scount+1
}
else p="F"
###?????C???????絲?G
list=c(list,p)
if (taget<ru[j] & x==1) {
mtotal=c(mtotal,scount)
break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
###########################################
ifail=function(a=1,b=1,n=100,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
p=ifelse(test = taget>=ru[j],"S","F")
list=c(list,p)
if (taget>=ru[j]) {
scount=scount+1
}else{
mtotal=c(mtotal,scount)
if ((j-scount)>i) break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
##########################################
runs=function(run,fun,...){
v=rep(0,run)
for (i in 1:run){
v[i]=fun(...)[[2]]
}
mean(v)
}
################################################################
k=ifail(a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 1000,fun = ifail,a=1,b=1,n=100)
runs(run = 1000,fun = ifail,a=1,b=1,n=100)
runs(run = 200,fun = mstep,a=b1,b=b2,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
runs(run = 200,fun = mstep,a=0.5,b=mm$root,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
runs(run = 200,fun = mstep,a=a,b=mm$root,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
runs(run = 200,fun = mstep,a=0.5,b=mm$root,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
bb=function(a,b){
a/(a+b)-mf
}
a=0.5
mm=uniroot(bb,c(0,10),a=a)
mm$root
betavar(a,mm$root)
vf
runs(run = 200,fun = mstep,a=0.5,b=mm$root,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
##varTL>varBETA
a=2
mm=uniroot(bb,c(0,10),a=a)
mm$root
betavar(a,mm$root)
vf
runs(run = 200,fun = mstep,a=a,b=mm$root,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
runs(run = 500,fun = kfail,a=1,b=1,n=200,t=0)
v=0
for (i in 1:500){
a=kfail(a=1,b=1,n=200,t=0)$persent
v=v+a
}
v/500
v=rep(0,500)
for (i in 1:500){
v[i]=mstep(a=1,b=1,m=44,t=1,n=200)[[2]]
}
mean(v)
v=rep(0,500)
for (i in 1:500){
v[i]=mstep(a=1,b=1,m=5,t=1,n=200)[[2]]
}
mean(v)
v=rep(0,500)
for (i in 1:500){
v[i]=mstep(a=1,b=1,m=5,t=0,n=200)[[2]]
}
mean(v)
v=rep(0,500)
for (i in 1:500){
v[i]=mstep(a=1,b=1,m=5,t=0,n=200)[[2]]
}
mean(v)
v=rep(0,500)
for (i in 1:500){
v[i]=mstep(a=1,b=1,m=5,t=0,n=200)[[2]]
}
mean(v)
runs(run = 100,fun = kfail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = kfail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = kfail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = kfail,a=1,b=1,n=200,t=0)
v=0
for (i in 1:100){
a=kfail(a=1,b=1,n=200,t=0)$persent
v=v+a
}
v/100
v=0
for (i in 1:100){
a=kfail(a=1,b=1,n=200,t=0)$persent
v=v+a
}
v/100
v=0
for (i in 1:100){
a=kfail(a=1,b=1,n=200,t=0)$persent
v=v+a
}
v/100
v=0
for (i in 1:100){
a=kfail(a=1,b=1,n=200,t=0)$persent
v=v+a
}
v/100
v=0
for (i in 1:100){
a=kfail(a=1,b=1,n=200,t=0)$persent
v=v+a
}
v/100
v=0
for (i in 1:100){
a=kfail(a=1,b=1,n=200,t=0)$persent
v=v+a
}
v/100
v=0
for (i in 1:100){
a=kfail(a=1,b=1,n=200,t=0)$persent
v=v+a
}
v/100
runs(run = 100,fun = 'kfail',a=1,b=1,n=200,t=0)
print(rbeta(n = 1000,2,1))
plot(rbeta(n = 1000,2,1))
density(rbeta(n = 1000,2,1))
plot(density(rbeta(n = 1000,2,1)))
plot(density(rbeta(n = 10000,2,1)))
runs(run = 100,fun = as.formula(kfail),a=1,b=1,n=200,t=0)
runs(run = 100,fun = eval(parse(text="kfail")),a=1,b=1,n=200,t=0)
runs(run = 100,fun = kfail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = kfail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = mstep,a=1,b=1,n=200,t=0)
runs(run = 100,fun = mreducestep,a=1,b=1,n=200,t=0)
runs(run = 100,fun = Nkfail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = ifail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = kfail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = mstep,a=1,b=1,m=4,n=200,t=0)
runs(run = 100,fun = mreducestep,a=1,b=1,m=4,n=200,t=0)
runs(run = 100,fun = Nkfail,a=1,b=1,n=200,N=50,t=0)
runs(run = 100,fun = ifail,a=1,b=1,n=200,t=0)
n=100;a=0.9
rn=(2*n*a)^(1/3)
kn=((n*sqrt(pi))/(4*sqrt(a)))^(2/3)
kn=floor(kn)
Nn=kn*sum(sapply(0:(n-1),aaa,a=0.9))
?learn
??LearnBayes
install.packages("LearnBayes")
??LearnBayes
?LearnBayes
help.search("LearnBayes")
help.search("Bayes")
vf
b1=ll[[2]][1]
b2=ll[[2]][2]
b1/(b1+b2)
mf=mean(f)
mf
betavar(a,mm$root)
vf
mm$root
library(LearnBayes)
?optimx
??optimx
install.packages("optimx")
runs(run = 100,fun = kfail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = mstep,a=1,b=1,m=4,n=200,t=0)
runs(run = 100,fun = mreducestep,a=1,b=1,m=4,n=200,t=0)
runs(run = 100,fun = Nkfail,a=1,b=1,n=200,N=50,t=0)
runs(run = 100,fun = ifail,a=1,b=1,n=200,t=0)
runs(run = 100,fun = kfail,a=1,b=1,n=100,t=0)
runs(run = 100,fun = mstep,a=1,b=1,m=rn,n=100,t=0)
runs(run = 100,fun = mreducestep,a=1,b=1,m=kn,n=100,t=0)
runs(run = 100,fun = Nkfail,a=1,b=1,n=100,N=Nn,t=0)
runs(run = 100,fun = ifail,a=1,b=1,n=100,t=0)
runs(run = 100,fun = kfail,a=1,b=1,n=100,t=0)
runs(run = 100,fun = mstep,a=1,b=1,m=rn,n=100,t=0)
runs(run = 100,fun = mreducestep,a=1,b=1,m=kn,n=100,t=0)
runs(run = 100,fun = Nkfail,a=1,b=1,n=100,N=Nn,t=0)
runs(run = 100,fun = ifail,a=1,b=1,n=100,t=0)
[1+3]^2
L=function(a,b){
gamma(a+b)/(gamma(a)*gamma(b+1))
}
calculateM=function(a,b,n){
((n*gamma(1+1/b))/(b*L(a,b)^(1/b)))^(b/1+b)
}
calculateM(a=1,b=1,n=100)
calculateM(a=1,b=1,n=1000)
calculateM(a=1,b=1,n=10)
L(1,1)
calculateM(a=1,b=1,n=100)
L=function(a,b){
gamma(a+b)/(gamma(a)*gamma(b+1))
}
calculateM=function(a,b,n){
((n*gamma(1+1/b))/(b*L(a,b)^(1/b)))^(b/(1+b))
}
calculateM(a=1,b=1,n=100)
calculateM(a=1,b=2,n=500)
library(xtable)
install.packages("stargazer")
library(stargazer)
stargazer(iris)
xtable(iris)
mtcars
xtable(mtcars)
