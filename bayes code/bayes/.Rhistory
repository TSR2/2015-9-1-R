list(list,persent,mtotal)
}
ifail(a=1,b=1,n=100)
ifail=function(a=1,b=1,n=100,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F
p=ifelse(test = taget>=ru[j],"S","F")
###?????C???????絲?G
list=c(list,p)
###?֭p?Ӥ??u???\??????
if (taget>ru[j]) {
scount=scount+1
}else{
mtotal=c(mtotal,scount)
if (scount>(length(mtotal)+1)) break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
runs=function(run,fun,...){
v=rep(0,run)
for (i in 1:run){
v[i]=fun(...)[[2]]
}
mean(v)
}
runs(run = 100,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
ifail=function(a=1,b=1,n=100,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
pp=1:100
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F
p=ifelse(test = taget>=ru[j],"S","F")
###?????C???????絲?G
list=c(list,p)
###?֭p?Ӥ??u???\??????
if (taget>ru[j]) {
scount=scount+1
}else{
mtotal=c(mtotal,scount)
if ((j-scount)>i) break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
ifail(a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
ifail(a=1,b=1,n=100)
ifail=function(a=1,b=1,n=100,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
pp=1:100
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###?qbeta?��t???X?Ӫ??p?G??uniform?j?A?h??S,?Ϥ???F
p=ifelse(test = taget>=ru[j],"S","F")
###?????C???????絲?G
list=c(list,p)
###?֭p?Ӥ??u???\??????
if (taget>=ru[j]) {
scount=scount+1
}else{
mtotal=c(mtotal,scount)
if ((j-scount)>i) break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
ifail=function(a=1,b=1,n=100,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
p=ifelse(test = taget>=ru[j],"S","F")
list=c(list,p)
if (taget>=ru[j]) {
scount=scount+1
}else{
mtotal=c(mtotal,scount)
if ((j-scount)>i) break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
runs=function(run,fun,...){
v=rep(0,run)
for (i in 1:run){
v[i]=fun(...)$persent
}
mean(v)
}
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs(run = 500,fun = ifail,a=1,b=1,n=100)
runs=function(run,fun,...){
v=rep(0,run)
for (i in 1:run){
v[i]=fun(...)[[2]]
}
mean(v)
}
runs(run = 500,fun = ifail,a=1,b=1,n=100)
k=ifail(a=1,b=1,n=100)
k
createbeta(n = 200,v = 0.1)
f=createbeta(n = 200,v = 0.1)
f
mf=mean(f)
vf=var(f)
f=createbeta(n = 200,v = 0.1)
mf=mean(f)
vf=var(f)
ff=function(x,y){
x/(x+y)-mf-(x*y)/((x+y)^2*(x+y+1))+vf
}
nlm(ff,p = c(0,0))
ff=function(z){
x=z[1]
y=z[2]
x/(x+y)-mf-(x*y)/((x+y)^2*(x+y+1))+vf
}
nlm(ff,p = c(0,0))
f=createbeta(n = 200,v = 0.1)
mf=mean(f)
vf=var(f)
ff=function(z){
x=z[1]
y=z[2]
(x/(x+y)-mf-(x*y)/((x+y)^2*(x+y+1))+vf)^2
}
nlm(ff,p = c(0,0))
optim(c(1,2),ff)
jj=optim(c(1,2),ff)
jj[[1]]
b1=jj[[1]][1]
b2=jj[[1]][2]
b1/(b1+b2)
mf
(b1*b2)/((b1+b2)^2*(b1+b2+1))
vf
nlm(ff,p = c(0,0))
nlm(ff,p = c(1,2))
ll=nlm(ff,p = c(1,2))
b1=ll[[2]][1]
b2=ll[[2]][2]
b1/(b1+b2)
(b1*b2)/((b1+b2)^2*(b1+b2+1))
mf
vf
?nlm
ll=nlm(ff,p = c(1,2),gradtol = 1e-12)
b1=ll[[2]][1]
b2=ll[[2]][2]
b1/(b1+b2)
(b1*b2)/((b1+b2)^2*(b1+b2+1))
ll=nlm(ff,p = c(1,2),gradtol = 1e-20)
b1=ll[[2]][1]
b2=ll[[2]][2]
b1/(b1+b2)
(b1*b2)/((b1+b2)^2*(b1+b2+1))
?optimize
?nlm
?optim
Rprof()
invisible(  mstep(a=1,b=1,m=31,n=1000)  )
Rprof(NULL)
summaryRprof()
EX=function(a){
1-4^a*(gamma(1+a)^2/gamma(2+2*a))
}
EX2=function(a){
(2+a/1+a)-2^(1+2*a)*(gamma(1+a)^2/gamma(2+2*a))
}
EX(0.9)
betamean=function(a,b){
a/(a+b)
}
sol=function(a,b,aphla){
betamean(a,b)-EX(aphla)
}
uniroot(f = sol,a=1,aphla=0.9,interval = c(0,5),tol=0.001)
TL=function(x,a,j){
x^j*2*a*(1 - x)*x^(a-1)*(2 - x)^(a-1)
}
aaa=function(a,j){
integrate(TL,lower = 0,upper = 1,a=a,j=j)[[1]]
}
n=100;a=0.9
rn=(2*n*a)^(1/3)
kn=((n*sqrt(pi))/(4*sqrt(a)))^(2/3)
kn=floor(kn)
Nn=kn*sum(sapply(0:(n-1),aaa,a=0.9))
EX(0.9)
ll=nlm(ff,p = c(1,2),gradtol = 1e-20)
ll
mf
b1/(b1+b2)
vf
(b1*b2)/((b1+b2)^2*(b1+b2+1))
ll=nlm(ff,p = c(1,2),gradtol = 1e-20)
b1=ll[[2]][1]
b2=ll[[2]][2]
mf
b1/(b1+b2)
vf
(b1*b2)/((b1+b2)^2*(b1+b2+1))
rn
kn
Nn
kn
runs(run = 200,fun = mstep,a=b1,b=b2,m=kn,n=500)
f=createbeta(n = 200,v = 0.9)
mf=mean(f)
vf=var(f)
ff=function(z){
x=z[1]
y=z[2]
(x/(x+y)-mf-(x*y)/((x+y)^2*(x+y+1))+vf)^2
}
ll=nlm(ff,p = c(1,2),gradtol = 1e-20)
jj=optim(c(1,2),ff)
b1=ll[[2]][1]
b2=ll[[2]][2]
mf
b1/(b1+b2)
vf
(b1*b2)/((b1+b2)^2*(b1+b2+1))
runs(run = 200,fun = mstep,a=b1,b=b2,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
mf
b1/(b1+b2)
vf
(b1*b2)/((b1+b2)^2*(b1+b2+1))
f=createbeta(n = 200,v = 0.9)
mf=mean(f)
vf=var(f)
ff=function(z){
x=z[1]
y=z[2]
(x/(x+y)-mf)^2+((x*y)/((x+y)^2*(x+y+1))-vf)^2
}
ll=nlm(ff,p = c(1,2),gradtol = 1e-20)
jj=optim(c(1,2),ff)
b1=ll[[2]][1]
b2=ll[[2]][2]
mf
b1/(b1+b2)
vf
(b1*b2)/((b1+b2)^2*(b1+b2+1))
runs(run = 200,fun = mstep,a=b1,b=b2,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
betavar=function(a,b){
(a*b)/((a+b)^2*(a+b+1))
}
uniroot(betamean,c(0,1),a=b1)
b1
bb=function(a,b){
a/(a+b)-mf
}
uniroot(betamean,c(0,1),a=b1)
bb=function(a,b){
a/(a+b)-mf
}
uniroot(betamean,c(0,10),a=b1)
mf
b1
b2
bb=function(a,b){
a/(a+b)-mf
}
uniroot(betamean,c(0,100),a=b1)
bb=function(a,b){
a/(a+b)-mf
}
uniroot(bb,c(0,10),a=b1)
mm=uniroot(bb,c(0,10),a=0.5)
mm$root
betavar(0.5,mm$root)
vf
runs(run = 200,fun = mstep,a=0.5,b=mm$root,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
a=0.1
mm=uniroot(bb,c(0,10),a=a)
mm$root
betavar(a,mm$root)
vf
bb=function(a,b){
a/(a+b)-mf
}
a=2
mm=uniroot(bb,c(0,10),a=a)
mm$root
betavar(a,mm$root)
vf
runs(run = 200,fun = mstep,a=a,b=mm$root,m=kn,n=500)
runs(run = 200,fun = mstep,alpha=0.9,m=kn,n=500,t=1)
sample(1:50)
sample(1:50,1)
sample(1:50,2)
sample(1:50,1)
sample(1:50,2)
sample(1:50,2)
a=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\new  5.txt",sep="/t")
a=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\new  5.txt",sep="\t")
b=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\
new  51.txt")
b=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\
new  51.txt",sep=" ")
a=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\\
new  5.txt",sep="\t")
b=read.table("C:\\Users\\tsr\\Desktop\\新增資料夾 (3)\\
new  51.txt",sep=" ")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\
new5.txt",sep="\t")
b=read.table("C:\Users\tsr\Desktop\ddd\\
new51.txt",sep=" ")
b=read.table("C:\Users\tsr\Desktop\ddd\\
new51.txt")
)
.
h
i
))]
}|
b=read.table("C:\Users\tsr\Desktop\ddd\\
new51.txt")
''
"
b=read.table(file="C:\Users\tsr\Desktop\ddd\\
new51.txt")
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\
new51.txt")
"
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",sep="\t")
a
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",sep="/t")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",sep="\t")
a
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
b
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",sep="\t")
a
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt")
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt")
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
a
?read.table
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",encoding ="UTF-8" )
a
library(readr)
a=read_table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",encoding ="UTF-8")
a=read_table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt")
a
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",encoding ="UTF-8" )
b=read.table(file="C:\\Users\\tsr\\Desktop\\ddd\\new51.txt")
a$V1=as.character( a$V1)
a
b$V1=as.character( b$V1)
b
a=read.table("C:\\Users\\tsr\\Desktop\\ddd\\new5.txt",encoding ="UTF-8" )
a$V1=as.character( a$V1)
a$V1
a
b
merge(a,b,by = V1)
a
b
merge(a,b,by.x = V1,by.y = V1)
merge(a,b)
library(plyr)
join(a,b,"V1")
merge(a,b,by = "V!")
merge(a,b,by = "V1")
p=merge(a,b,by = "V1")
write(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt")
write(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt",sep = " ")
p
write.csv(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt")
write.csv(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt",row.names = F,col.names = F)
write.csv(p,file="C:\\Users\\tsr\\Desktop\\ddd\\ppp.txt",row.names = F,col.names = F)
?glm
glm(iris[,5]~.,family = "log")
glm(iris[,5]~.,family = "poisson")
glm(iris[,5]~.,family = "poisson",data=iris)
glm(iris[,5]~.,family = "binomial",data=iris)
glm(Species~.,family = "binomial",data=iris)
glm(Species~.,family = "poisson",data=iris)
??roc
library(foreign)
x=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav")
x[1,]
x=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav",
to.data.frame=T)
head(x)
table(x$race,x$smoke)
p=table(x$race,x$smoke)
chisq.test(x =p)
head(x)
kk=chisq.test(x =p)
names(kk)
str(kk)
glm(ui~race,family = "binomial",data=x)
pp=table(x$smoke,x$low)
kk=chisq.test(x =pp)
kk
x1=x[x$smoke==0,]
x2=x[x$smoke==1,]
chisq.test(x=table(x1$smoke,x1$low))
chisq.test(x=table(x2$smoke,x2$low))
glm(low~race+smoke,family = "binomial",data=x)
kk=lm(low~smoke,data=x)
summary(kk)
is(x$smoke)
kk=lm(low~as.factor(smoke),data=x)
summary(kk)
as.factor(x$smoke)
o=as.factor(x$smoke)
kk=lm(low~o,data=x)
summary(kk)
o=as.factor(x$race)
kk=lm(low~o,data=x)
summary(kk)
kk=lm(low~race,data=x)
summary(kk)
kk=lm(low~smoke+o,data=x)
summary(kk)
glm(low~smoke+o,family = "",data=x)
glm(low~smoke+o,family = "binomial",data=x)
