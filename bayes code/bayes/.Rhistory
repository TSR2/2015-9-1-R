re=calculateRE(a=b1,b=b2,n=n)
a1=allrun(run=500,n=n,a=b1,b=b2,t=0,m=m,N=N,re=re)
a1
rn=calculateTLRn(a=a,n=n)
kn=calculateTLKn(a=a,n=n)
Nn=calculateTLNn(a=a,n=n)
a2=allrun(run=500,n=n,alpha=a,t=1,m=kn,N=Nn,re=rn)
a2
test1=rbind(a1,a2)
a3=matrix(c('Beta','TL',paste('a=',round(b1,2),',','b=',round(b2,2),sep='')
,a,n,n,'=','=',round(bvar,3),round(vf,3))
,byrow = F,ncol=5)
colnames(a3)=c('distributed','parameter','n','EX','Var')
a4=cbind(a3,test1)
a4
test=rbind(test,a4)
}
alllast[[j]]=test
}
varlist=list(v1=c(0.01681744,.03,.04,.01,.005),
v3=c(0.04310766,.07,.1,.02,.03),
v5=c(0.05240259,.1,.15,.02,.03),
v9=c(0.05702166,.1,.18,.02,.03))
aa=c(.1,.3,.5,.9)
n=1000
alllast=list()
for (j in 1:4){
a=aa[j]
test=data.frame()
for (i in varlist[[j]] ) {
f=createbeta(n = 2000,v = j)
mf=mean(f)
vf=var(f)
bvar=i
ff=function(z,mf=mf,vf=bvar){
x=z[1]
y=z[2]
(x/(x+y)-mf)^2+((x*y)/((x+y)^2*(x+y+1))-vf)^2
}
ll=nlm(ff,mf=mf,vf=bvar,p = c(1,2),gradtol = 1e-20)
b1=ll[[2]][1]
b2=ll[[2]][2]
vf
b1
b2
m=calculateM(a=b1,b=b2,n=n)
N=calculateN(a=b1,b=b2,n=n,m=m)
re=calculateRE(a=b1,b=b2,n=n)
a1=allrun(run=500,n=n,a=b1,b=b2,t=0,m=m,N=N,re=re)
a1
rn=calculateTLRn(a=a,n=n)
kn=calculateTLKn(a=a,n=n)
Nn=calculateTLNn(a=a,n=n)
a2=allrun(run=500,n=n,alpha=a,t=1,m=kn,N=Nn,re=rn)
a2
test1=rbind(a1,a2)
a3=matrix(c('Beta','TL',paste('a=',round(b1,2),',','b=',round(b2,2),sep='')
,a,n,n,'=','=',round(bvar,3),round(vf,3))
,byrow = F,ncol=5)
colnames(a3)=c('distributed','parameter','n','EX','Var')
a4=cbind(a3,test1)
a4
test=rbind(test,a4)
}
alllast[[j]]=test
}
n1000=alllast
n1000
?write.csv
write.csv(x = n500,'G:/貝氏輩分/500.csv',row.names = F)
write.csv(x = n1000,'G:/貝氏輩分/1000.csv',row.names = F)
n500
n1000
createbeta=function(n=200,v=0.1){
ff=function(x,v,uni){x^v*(2-x)^v-uni}
bb=0
uu=0
for (i in 1:n){
uni=runif(1)
uu[i]=uni
pp=uniroot(ff,c(0,1),v=v,uni=uni,tol=0.00000000000000000000001)
bb[i]=pp[[1]]
}
rb=bb
}
#####################
kfail=function(a=1,b=1,n=100,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=character(n)
p=0;d=0;i=1;count=0;ru=runif(n)
for (j in 1:n){
taget=rb[i]
if(taget>=ru[j]) {p="S"
}else {p="F"}
list[j]=p
if (taget<ru[j]) {
i=i+1}
}
count=sum(list=="F")/n
list(log=list,persent=count)
}
####################################
mstep=function(a,b,m,n,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=character(n);mtotal=c();p=0
i=1;scount=0;ru=runif(n)
for (j in 1:n){
if (length(mtotal)<m |scount>=m  ) { taget=rb[i]
}else {taget=rb[which.max(mtotal)]}
if(taget>=ru[j]) {p="S"
scount=scount+1
}else {p="F"}
list[j]=p
if (length(mtotal)==m) scount=0
if (taget<ru[j] & length(mtotal)<m & scount<m) {
mtotal=c(mtotal,scount)
i=i+1
scount=0
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
####################################
mreducestep=function(a,b,re,n,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=character(n);mtotal=c();p=0
i=1;scount=0;ru=runif(n)
for (j in 1:n){
if (scount>=re | scount==0) {taget=rb[i]}
if(taget>=ru[j]) {p="S"
scount=scount+1
}else {p="F"}
list[j]=p
if (taget<ru[j] & scount<re) {
mtotal=c(mtotal,scount)
i=i+1
scount=0
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
##########################################
Nkfail=function(a,b,n,N,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=character(n);mtotal=c();p=0
i=1;scount=0;ru=runif(n);x=1
ru=runif(n)
for (j in 1:n){
if (x==1) taget=rb[i]
if (j>=N & p=="F" & x==1) {
taget=rb[which.max(mtotal)]
x=0}
if (taget>=ru[j]) {
p="S"
scount=scount+1
}else {p="F"}
list[j]=p
if (taget<ru[j] & x==1) {
mtotal=c(mtotal,scount)
i=i+1
scount=0
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
###########################################
ifail=function(a=1,b=1,n=100,alpha=0.1,t=0){
if (t==1){rb=createbeta(n,alpha)}
else {rb=rbeta(n = n,shape1 = a,shape2 = b)}
list=character(n);p=0
i=1;ru=runif(n);Fcount=0
ru=runif(n)
for (j in 1:n){
taget=rb[i]
if (taget>=ru[j]) {p="S"
}else {p="F"
Fcount=Fcount+1}
list[j]=p
if (Fcount==i) {
i=i+1
Fcount=0
}
}
persent=sum(list=="F")/n
list(list,persent)
}
##########################################
runs=function(run,fun,...){
v=rep(0,run)
for (i in 1:run){
v[i]=fun(...)[[2]]
}
mean(v)
}
#############################################
bw=function(a,b,x,u){
expression( x^(a-1)*(1-x)^(b-1))
}
beint=function(a=0.1,b=1,u=1/2){
integrate(f= function(x) x^(a-1)*(1-x)^(b-1) ,lower=0,upper=u)
}
############################calculate TL rn,kn,Nn
EX=function(a){
1-4^a*(gamma(1+a)^2/gamma(2+2*a))
}
EX2=function(a){
(2+a/1+a)-2^(1+2*a)*(gamma(1+a)^2/gamma(2+2*a))
}
betamean=function(a,b){
a/(a+b)
}
betavar=function(a,b){
(a*b)/((a+b)^2*(a+b+1))
}
sol=function(a,b,aphla){
betamean(a,b)-EX(aphla)
}
TL=function(x,a,j){
x^j*2*a*(1 - x)*x^(a-1)*(2 - x)^(a-1)
}
aaa=function(a,j){
integrate(TL,lower = 0,upper = 1,a=a,j=j)[[1]]
}
calculateN=function(a,b,n,m){
bb=beta(a=a+(0:(n-1)),b=b)
N=(sum(bb)*m)/beta(a,b)
}
L=function(a,b){
gamma(a+b)/(gamma(a)*gamma(b+1))
}
calculateRE=function(a,b,n){
round((n*L(a,b)*gamma(1+b))^(1/(1+b)))
}
calculateM=function(a,b,n){
round(((n*gamma(1+1/b))/(b*L(a,b)^(1/b)))^(b/(1+b)))
}
calculateN=function(a,b,n,m){
bb=beta(a=a+(0:(n-1)),b=b)
N=(sum(bb)*m)/beta(a,b)
round(N)
}
calculateTLRn=function(a,n){
round((2*n*a)^(1/3))
}
calculateTLKn=function(a,n){
kn=((n*sqrt(pi))/(4*sqrt(a)))^(2/3)
floor(kn)
}
calculateTLNn=function(a,n){
k=calculateTLKn(a,n)
k=floor(k)
N=k*sum(sapply(0:(n-1),aaa,a=a))
floor(N)
}
allrun=function(run=100,a=1,b=1,n=200,alpha=.1,t=1,m=4,N=50,re=4){
pp=c()
pp[1]=runs(run = run,fun = kfail,a=a,b=b,n=n,alpha=alpha,t=t)
pp[2]=runs(run = run,fun = mstep,a=a,b=b,n=n,alpha=alpha,t=t,m=m)
pp[3]=runs(run = run,fun = mreducestep,a=a,b=b,n=n,alpha=alpha,t=t,re=re)
pp[4]=runs(run = run,fun = Nkfail,a=a,b=b,n=n,alpha=alpha,t=t,N=N)
pp[5]=runs(run = run,fun = ifail,a=a,b=b,n=n,alpha=alpha,t=t)
names(pp)=c('kfail','mstep','mreduce','Nkfail','ifail')
pp
}
n1000
n500
varlist=list(v1=c(0.01681744,.03,.04,.01,.005),
v3=c(0.04310766,.07,.1,.02,.03),
v5=c(0.05240259,.1,.15,.02,.03),
v9=c(0.05702166,.1,.18,.02,.03))
aa=c(.1,.3,.5,.9)
n=1500
alllast=list()
for (j in 1:4){
a=aa[j]
test=data.frame()
for (i in varlist[[j]] ) {
f=createbeta(n = 2000,v = j)
mf=mean(f)
vf=var(f)
bvar=i
ff=function(z,mf=mf,vf=bvar){
x=z[1]
y=z[2]
(x/(x+y)-mf)^2+((x*y)/((x+y)^2*(x+y+1))-vf)^2
}
ll=nlm(ff,mf=mf,vf=bvar,p = c(1,2),gradtol = 1e-20)
b1=ll[[2]][1]
b2=ll[[2]][2]
vf
b1
b2
m=calculateM(a=b1,b=b2,n=n)
N=calculateN(a=b1,b=b2,n=n,m=m)
re=calculateRE(a=b1,b=b2,n=n)
a1=allrun(run=500,n=n,a=b1,b=b2,t=0,m=m,N=N,re=re)
a1
rn=calculateTLRn(a=a,n=n)
kn=calculateTLKn(a=a,n=n)
Nn=calculateTLNn(a=a,n=n)
a2=allrun(run=500,n=n,alpha=a,t=1,m=kn,N=Nn,re=rn)
a2
test1=rbind(a1,a2)
a3=matrix(c('Beta','TL',paste('a=',round(b1,2),',','b=',round(b2,2),sep='')
,a,n,n,'=','=',round(bvar,3),round(vf,3))
,byrow = F,ncol=5)
colnames(a3)=c('distributed','parameter','n','EX','Var')
a4=cbind(a3,test1)
a4
test=rbind(test,a4)
}
alllast[[j]]=test
}
alllast
alllast
n1500=alllast
n1500
do.call(rbind,n1500)
test1500=do.call(rbind,n1500)
test1500
library(plyr)
library(dplyr)
library(magrittr)
test1500 %>% colwise(round(digits=2),.cols = 6:10)(.)
test1500 %>% colwise(round(),.cols = 6:10,digits=2)(.)
test1500 %>% colwise(function(x) round(x,2),.cols = 6:10,digits=2)(.)
test1500 %>% colwise(function(x) round(x,digits = 2),.cols = 6:10)(.)
test1500 %>% str
tt1=function(x){
x=as.character(x) %>% as.numeric()
round(x,digits = 2)
}
test1500 %>% colwise(tt1,.cols = 6:10)(.)
tt1=function(x){
x=as.character(x) %>% as.numeric()
round(x,digits = 3)
}
kk1=test1500 %>% colwise(tt1,.cols = 6:10)(.)
kk1
cbind(n1500[,1:5],kk1)
cbind(test1500[,1:5],kk1)
tt1=function(x){
x=as.character(x) %>% as.numeric()
round(x,digits = 3)
}
trans=function(x){
test1500=do.call(rbind,x)
kk1=test1500 %>% colwise(tt1,.cols = 6:10)(.)
cbind(test1500[,1:5],kk1)
}
final500=trans(n500)
final1000=trans(n1000)
final1500=trans(n1500)
final500
final500
test1500 %>% is
n1500[[1]] %>% is
n1500[[1]]
a3=matrix(c('Beta','TL',paste('a=',round(b1,2),',','b=',round(b2,2),sep='')
,a,n,n,'=','=',round(bvar,3),round(vf,3))
,byrow = F,ncol=5)
a3 %>% is
colnames(a3)=c('distributed','parameter','n','EX','Var')
a3 %>% is
test1
test1 %>% is
a4
a4 %>% is
test
test %>% is
rbind(a4,a4) %>% is
xtable
library(xtable)
install.packages("xtable")
library(xtable)
xtable(final500)
final500 %>% dim
?xtable()
row.names(final500)=1:40
xtable(final500)
xtable(final500)
final500
xtable(final500)
final500 %>% dim
final1000 %>% dim
final1500 %>% dim
row.names(final1000)=1:40
row.names(final1500)=1:40
xtable(final500)
names(final500)
names(final500)[6:10]=c('1-faulure','m-run','non-recolling','Nlearning','iifaulure')
names(final1000)[6:10]=c('1-faulure','m-run','non-recolling','Nlearning','iifaulure')
names(final1500)[6:10]=c('1-faulure','m-run','non-recolling','Nlearning','iifaulure')
row.names(final500)=1:40
row.names(final1000)=1:40
row.names(final1500)=1:40
xtable(final500)
xtable(final1000)
xtable(final1500)
final500 %>% dim
final1000 %>% dim
final1500 %>% dim
names(final500)[6:10]=c('1-fa','m-run','non','Nlearn','i')
names(final1000)[6:10]=c('1-fa','m-run','non','Nlearn','i')
names(final1500)[6:10]=c('1-fa','m-run','non','Nlearn','i')
row.names(final500)=1:40
row.names(final1000)=1:40
row.names(final1500)=1:40
xtable(final500)
xtable(final1000)
xtable(final1500)
xtable(final1000)
xtable(final500,label = N=500)
xtable(final500,label = 'N=500')
rep(1:20,times=2)
?rep
rep(1:20,each=2)
names(final500)[6:10]=c('1-fa','m-run','non','Nlearn','i')
names(final1000)[6:10]=c('1-fa','m-run','non','Nlearn','i')
names(final1500)[6:10]=c('1-fa','m-run','non','Nlearn','i')
row.names(final500)=rep(1:20,each=2)
row.names(final1000)=rep(1:20,each=2)
row.names(final1500)=rep(1:20,each=2)
xtable(final500)
xtable(final1000)
xtable(final1500)
rep(1:20,each=2)
row.names(final500)=rep(1:20,each=2)
final500$group=rep(1:20,each=2)
xtable(final500)
final1000$group=rep(1:20,each=2)
final1500$group=rep(1:20,each=2)
xtable(final1000)
xtable(final1500)
final1000 %>% dim
final1500 %>% dim
names(final500)[6:10]=c('1-fa','m-run','non','Nlearn','i')
names(final1000)[6:10]=c('1-fa','m-run','non','Nlearn','i')
names(final1500)[6:10]=c('1-fa','m-run','non','Nlearn','i')
row.names(final500)=1:40
row.names(final1000)=1:40
row.names(final1500)=1:40
final500$group=rep(1:4,each=10)
final1000$group=rep(1:4,each=10)
final1500$group=rep(1:4,each=10)
xtable(final500)
xtable(final1000)
xtable(final1500)
xtable(final500,final1000)
?xtable
row.names(final500)=''
row.names(final500)=NULL
final500
xtable(final500)
n500
tt1=function(x){
x=as.character(x) %>% as.numeric()
round(x,digits = 4)
}
trans=function(x){
test1500=do.call(rbind,x)
kk1=test1500 %>% colwise(tt1,.cols = 6:10)(.)
cbind(test1500[,1:5],kk1)
}
final500=trans(n500)
final1000=trans(n1000)
final1500=trans(n1500)
library(xtable)
final500 %>% dim
final1000 %>% dim
final1500 %>% dim
names(final500)[6:10]=c('1-fa','m-run','non','Nlearn','i')
names(final1000)[6:10]=c('1-fa','m-run','non','Nlearn','i')
names(final1500)[6:10]=c('1-fa','m-run','non','Nlearn','i')
row.names(final500)=1:40
row.names(final1000)=1:40
row.names(final1500)=1:40
final500$group=rep(1:4,each=10)
final1000$group=rep(1:4,each=10)
final1500$group=rep(1:4,each=10)
xtable(final500)
n500
n1000
n1500
final500
xtable(final500)
xtable(final500,digits=4)
xtable(final1000,digits=4)
xtable(final1500,digits=4)
ggg=proc.time()
runs(run = 1000,fun = kfail,a=1,b=1,n=1000,t=0)
proc.time()-ggg
ggg=proc.time()
runs(run = 1000,fun = mstep,a=1,b=1,m=9,n=100,t=0)
proc.time()-ggg
ggg=proc.time()
runs(run = 1000,fun = mreducestep,a=1,b=1,m=9,n=100,t=0)
proc.time()-ggg
ggg=proc.time()
runs(run = 1000,fun = Nkfail,a=1,b=1,n=100,alpha=0.9,N=g,t=0)
proc.time()-ggg
ggg=proc.time()
runs(run = 1000,fun = ifail,a=1,b=1,n=100,t=0)
proc.time()-ggg
xtable(final1500,digits=4)
