for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/4)
b=2*sqrt(m/4)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=30
m=100
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/4)
b=2*sqrt(m/4)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=30
m=100
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/4)
b=2*sqrt(m/4)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=30
m=100
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/4)
b=2*sqrt(m/4)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=100
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/4)
b=2*sqrt(m/4)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=100
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/4)
b=2*sqrt(m/4)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=100
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/4)
b=2*sqrt(m/4)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=100
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/3)
b=2*sqrt(m/3)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=100
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/3)
b=2*sqrt(m/3)
sum(j>=a & j<=b)/length(j)
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/3)
b=2*sqrt(m/3)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/4)
b=2*sqrt(m/4)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m/2)
b=2*sqrt(m/2)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
for (i in 1:m){
uni[i]=sample(c(1,-1),size = 1,replace = T)
}
j[k]=sum(uni)
}
j
a=-2*sqrt(n/3)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
uni[i]=sample(c(1,-1),size = m,replace = T)
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
uni=sample(c(1,-1),size = m,replace = T)
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
uni=sample(c(1,-1),size = m,replace = T)
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
j=c()
uni=c()
n=300
m=1000
for (k in 1:n){
uni=sample(c(1,-1),size = m,replace = T)
j[k]=sum(uni)
}
j
a=-2*sqrt(m)
b=2*sqrt(m)
sum(j>=a & j<=b)/length(j)
?sample
plot(1:20)
plot(1:20,type="o")
plot(1:20,type="b")
plot(1:20,type="b",bty="]")
plot(1:20,type="b",bty="u")
plot(1:20,type="b",bty="7")
plot(1:20,type="l",lty=3)
plot(1:20,type="l",lty=4)
plot(1:20,type="l",lty=4,col=20)
plot(1:20,type="l",col=20)
plot(1:20,type="l",col=10)
plot(1:20,type="l",col=1)
plot(1:20,type="l",col=2)
plot(1:20,type="l",col=2,xlim=c(1:10))
plot(1:20,type="l",col=2,xlim=c(1,10))
plot(1:20,type="l",col=2,xlim=c(1,100))
points(1:5,10:15)
points(1:5,11:15)
abline(1,inf)
color=rainbow(150)
color
plot(color)
plot(1:150,color=color)
color=rainbow(150)
color=rainbow(150)
plot(1:150,color=color)
warning()
warnings()
colorm=rainbow(150)
plot(1:150,color=colorm)
x <- rnorm(50)
mycolor <- rainbow(150)[1:100]
z <- (x-min(x))/(max(x)-min(x))
plot(x, rep(1, length(x)), main="range (0, 1)", type="n", ylab="", ylim=c(0.3,1))
points(c(seq(min(x), max(x), length.out=100)), rep(1, 100), col=mycolor, cex=2, pch=15)
x <- rnorm(50)
mycolor <- rainbow(150)[1:100]
z <- (x-min(x))/(max(x)-min(x))
plot(x, rep(1, length(x)), main="range (0, 1)", type="n", ylab="", ylim=c(0.3,1))
points(c(seq(min(x), max(x), length.out=100)), rep(1, 100), col=mycolor, cex=2, pch=15)
plot(x, rep(1, length(x)), main="range (0, 1)", type="p", ylab="", ylim=c(0.3,1))
plot(x, rep(1, length(x)), main="range (0, 1)", type="n", ylab="", ylim=c(0.3,1))
x <- rnorm(50)
plot(x, rep(1, length(x)), main="range (0, 1)", type="n", ylab="", ylim=c(0.3,1))
plot(x, main="range (0, 1)", type="n", ylab="", ylim=c(0.3,1))
plot(x, main="range (0, 1)", type="p", ylab="", ylim=c(0.3,1))
x <- rnorm(50)
mycolor <- rainbow(150)[1:100]
z <- (x-min(x))/(max(x)-min(x))
plot(x, main="range (0, 1)", type="p", ylab="", ylim=c(0.3,1))
plot(x, rep(1, length(x)), main="range (0, 1)", type="n", ylab="", ylim=c(0.3,1))
points(c(seq(min(x), max(x), length.out=100)), rep(1, 100), col=mycolor, cex=2, pch=15)
library(rpart)
install.packages("rpart.plot")
??RWeka
library(maptree)
x=iris
t=sample(1:150,120)
trainx=x[t,]
testx=x[!t,]
testx=x[-t,]
model=rpart(trainx[,5]~trainx[,1:4])
model=rpart(trainx[,5]~trainx[,1],train[,2])
model=rpart(trainx[,5]~trainx[,1]+trainx[,2])
rpart.plot(model)
library(raprt.plot)
library(rpart.plot)
rpart.plot(model)
xx=names(x)
xx=paste(xx,"+")
model=rpart(trainx[,5]~xx)
xx
xx=cat(xx,"+")
xx
xx=names(x)
xx=cat(xx,"+")
xx
xx=paste(xx,sep="+")
xx
xx=names(x)
xx=paste(xx,sep="+")
xx
xx
xx=names(x)
xx
xx=paste(xx," ",sep="+")
xx
xx=paste(xx,,collapse = "+")
xx=paste(xx,collapse = "+")
xx
xx=names(x)
xx
xx=paste(xx,sep="",collapse = "+")
xx
model=rpart(trainx[,5]~xx)
model=rpart(trainx[,5]~get(xx))
model=rpart(trainx[,5]~eval(parse(text=xx)))
model=rpart(trainx[,5]~eval(parse(text=xx)),data=trainx)
model
model=rpart(trainx[,5]~eval(parse(text=xx)),data=trainx)
xx=names(x)
xx
xx
xx=paste(xx,sep="",collapse = "+")
xx
xx=paste(xx[1:4],sep="",collapse = "+")
xx
xx=names(x)
xx
xx=paste(xx[1:4],sep="",collapse = "+")
xx
model=rpart(trainx[,5]~eval(parse(text=xx)),data=trainx)
rpart.plot(model)
model=rpart(trainx[,5]~parse(text=xx),data=trainx)
model=rpart(Species~.,data=trainx)
rpart.plot(model)
model=rpart(Species~.,data=trainx)
rpart.plot(model)
model=rpart(Species~.,data=trainx)
rpart.plot(model)
trainx
x=iris
t=sample(1:150,120)
trainx=x[t,]
testx=x[-t,]
model=rpart(Species~.,data=trainx)
rpart.plot(model)
rpart.plot(model)
predict(model,testx[,1:4])
hh=predict(model,testx[,1:4])
hh
names(hh)
is(hh)
hhas.data.frame(hh)
hh=as.data.frame(hh)
names(hh)
hh
apply(hh,1,which.max)
index=apply(hh,1,which.max)
hh=predict(model,testx[,1:4])
hh=as.data.frame(hh)
name=names(hh)
hh
index=apply(hh,1,which.max)
name[index]
pre=name[index]
sum(pre==testx[,5])
sum(pre==testx[,5])/length(testx)
sum(pre==testx[,5])/dim(testx)[1]
draw.tree(model)
post(model)
post(model)
draw.tree(model)
rpart.plot(model)
draw.tree(model)
install.packages("mvpart")
install.packages("C:/Users/tsr/Downloads/mvpart_1.6-2.tar.gz", repos = NULL, type = "source")
library(mvpart)
library(mvpart)
x=car.test.frame
x
head(x)
range(x$Mileage)
pp=rep("A",60)
pp=rep("A",60)
pp[x$Mileage<25]="A"
pp[25<=x$Mileage<32]="B"
pp[x$Mileage>=32]="C"
pp[x$Mileage<25]="A"
pp[25<=x$Mileage & x$Mileage<32]="B"
pp[x$Mileage>=32]="C"
x$"類別"=pp
head(x)
install.packages("sampling")
x=car.test.frame
head(x)
range(x$Mileage)
pp=rep("A",60)
pp[x$Mileage<25]="A"
pp[25<=x$Mileage & x$Mileage<32]="B"
pp[x$Mileage>=32]="C"
x$"group"=pp
x=car.test.frame
head(x)
range(x$Mileage)
pp=rep("A",60)
pp[x$Mileage<25]="A"
pp[25<=x$Mileage & x$Mileage<32]="B"
pp[x$Mileage>=32]="C"
x$group=pp
summary(x$group)
table(x$group)
ss=sample(1:60,45)
trainx=x[ss,]
testx=x[-ss,]
model=rpart(group~.,data=trainx)
rpart.plot(model)
x[,-Mileage]
head(x)
x[,5]
x[,4]
x[,-4]
x=x[,-4]
ss=sample(1:60,45)
trainx=x[ss,]
testx=x[-ss,]
model=rpart(group~.,data=trainx)
rpart.plot(model)
predict(model,testx)
hh=predict(model,testx)
hh=as.data.frame(hh)
name=names(hh)
index=apply(hh,1,which.max)
pre=name[index]
sum(pre==testx$group)/dim(testx)[1]
table(x$group)
head(x)
cor(x)
