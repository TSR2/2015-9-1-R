layout(matrix(c(1,1,1,2,2,2,3,3,3),3,3))
layout.show(3)
layout.show(2)
layout.show(3)
layout.show(4)
layout(matrix(c(1,1,1,2,2,2,3,3,3),3,3))
layout.show(3)
layout(1)
layout.show(3)
vv=names(iris)
vv
heatmap(x = iris[,1])
heatmap(x = iris[,2])
heatmap(x = iris[,2:3])
heatmap(x = iris[2:3,2:3])
pp=as.matrix(iris[,2])
heatmap(x = pp)
pp=as.matrix(iris[,2:3])
heatmap(x = pp)
stars(iris)
pie(iris[,5],col=1:3)
iris[,5]
pie(iris[,2],col=1:3)
pie(iris[,5],col=1:3)
xx=rep(c(1,2,3),50)
pie(xx)
hist(iris[,5])
hist(iris[,4])
matploy(iris)
matplot(iris)
matplot(iris[,1:4])
matplot(iris[,1:4],type=l)
matplot(iris[,1:4],type="l")
matplot(iris[,1:4],type="p")
matplot(iris[,1:4],iris[,1:4])
Pairs(x)
pairs(x)
pairs(x)
x
pairs(iris)
iris
matplot(iris[,1:4],type="p")
coplot(iris[,2]~iris[,3])
coplot(iris[,2]~iris[,3]|a)
coplot(iris[,2]~iris[,3]|2)
coplot(iris[,2]~iris[,3]|c(1,10))
help("par")
hist(iris[,3])
lines(c(1,6),c(5,25))
lines(1:7,dnorm(1:7,mean(iris[,3],std(iris[,3]))))
lines(1:7,dnorm(1:7,mean(iris[,3],sd(iris[,3]))))
lines(1:7,20*dnorm(1:7,mean(iris[,3],sd(iris[,3]))))
hist(iris[,3])
lines(c(1,6),c(5,25))
lines(1:7,40*dnorm(1:7,mean(iris[,3],sd(iris[,3]))),col="blue")
lines(1:7,40*dnorm(1:7,mean(iris[,3],sd(iris[,3]))),col="blue",lwd=3)
par(br=2)
par(bg=2)
hist(iris[,3])
hist(iris[,3])
par()
hist(iris[,3])
source('~/.active-rstudio-document', echo=TRUE)
par(bg=0)
hist(iris[,3])
mreducestep=function(a,b,m,n){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###從beta分配抽出來的如果比uniform大，則給S,反之給F
p=ifelse(test = taget>=ru[j],"S","F")
###收集每次的實驗結果
list=c(list,p)
###累計該手臂成功的次數
if (taget>ru[j]) {scount=scount+1}
####
if (scount<m){
####使用的手臂在m個以下，而且該次實驗是失敗的，記錄下該次實驗的成功總次數
if (taget<ru[j] & length(mtotal)<m) {
mtotal=c(mtotal,scount)
break
}
}
}
}
list
persent=sum(list=="F")/n
mtotal
list(list,persent,mtotal)
}
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep=function(a,b,m,n){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###從beta分配抽出來的如果比uniform大，則給S,反之給F
p=ifelse(test = taget>=ru[j],"S","F")
###收集每次的實驗結果
list=c(list,p)
###累計該手臂成功的次數
if (taget>ru[j]) {scount=scount+1}
####
if (scount<m){
####使用的手臂在m個以下，而且該次實驗是失敗的，記錄下該次實驗的成功總次數
if (taget<ru[j] ) {
mtotal=c(mtotal,scount)
break
}
}
}
}
list
persent=sum(list=="F")/n
mtotal
list(list,persent,mtotal)
}
mreducestep(a=1,b=1,m=9,n=100)
#####################################
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep=function(a,b,m,n){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###從beta分配抽出來的如果比uniform大，則給S,反之給F
p=ifelse(test = taget>=ru[j],"S","F")
###收集每次的實驗結果
list=c(list,p)
###累計該手臂成功的次數
if (taget>ru[j]) {scount=scount+1}
####使用的手臂在m個以下，而且該次實驗是失敗的，記錄下該次實驗的成功總次數
if (taget<ru[j] ) {
mtotal=c(mtotal,scount)
break
}
}
}
list
persent=sum(list=="F")/n
mtotal
list(list,persent,mtotal)
}
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep=function(a,b,m,n){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###從beta分配抽出來的如果比uniform大，則給S,反之給F
p=ifelse(test = taget>=ru[j],"S","F")
###收集每次的實驗結果
list=c(list,p)
###累計該手臂成功的次數
if (taget>ru[j]) {scount=scount+1}
####使用的手臂在m個以下，而且該次實驗是失敗的，記錄下該次實驗的成功總次數
if (taget<ru[j]) {
mtotal=c(mtotal,scount)
if (scount<m) break
}
}
}
list
persent=sum(list=="F")/n
mtotal
list(list,persent,mtotal)
}
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
kfail(a=1,b=1,n=100)
kfail=function(a,b,n){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
p=ifelse(test = taget>=ru[j],"S","F")
list=c(list,p)
if (taget<ru[j]) {break}
}
}
list
count=sum(list=="F")/n
list(log=list,persent=count)
}
kfail(a=1,b=1,n=100)
kfail=function(a,b,n,N){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
p=0
count=0
g=0
for (i in 1:n){
taget=rb[i]
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
p=ifelse(test = taget>=ru[j],"S","F")
list=c(list,p)
if (length(list)==N & p=='S') {g=1}
if (taget<ru[j] & g==0) {break}
}
}
list
count=sum(list=="F")/n
list(log=list,persent=count)
}
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail=function(a,b,n,N){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
p=0
count=0
g=0
for (i in 1:n){
taget=rb[i]
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
p=ifelse(test = taget>=ru[j],"S","F")
list=c(list,p)
if (length(list)==N & p=='S') {next}
if (taget<ru[j]) {break}
}
}
list
count=sum(list=="F")/n
list(log=list,persent=count)
}
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail(a=1,b=1,n=100,N=50)
kfail=function(a,b,n,N){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
p=0;count=0
for (i in 1:n){
taget=rb[i]
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
p=ifelse(test = taget>=ru[j],"S","F")
list=c(list,p)
if (length(list)==N & p=='S') {next}
if (taget<ru[j]) {break}
}
}
list
count=sum(list=="F")/n
list(log=list,persent=count)
}
kfail(a=1,b=1,n=100,N=50)
mreducestep=function(a,b,m,n){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
ru=runif(n)
###從beta分配抽出來的如果比uniform大，則給S,反之給F
p=ifelse(test = taget>=ru[j],"S","F")
###收集每次的實驗結果
list=c(list,p)
###累計該手臂成功的次數
if (taget>ru[j]) {
scount=scount+1
}else{
####使用的手臂在m個以下，而且該次實驗是失敗的，記錄下該次實驗的成功總次數
mtotal=c(mtotal,scount)
######手臂成功數不足m，換手臂
if (scount<m) break
}
}
}
list
persent=sum(list=="F")/n
mtotal
list(list,persent,mtotal)
}
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mreducestep(a=1,b=1,m=9,n=100)
mstep=function(a,b,m,n){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
###如果換手臂的次數大於m,則找出成功率最高的做下去
if (length(mtotal)==m) {taget=rb[which.max(mtotal)]}
ru=runif(n)
###從beta分配抽出來的如果比uniform大，則給S,反之給F
p=ifelse(test = taget>=ru[j],"S","F")
###收集每次的實驗結果
list=c(list,p)
###累計該手臂成功的次數
if (taget>ru[j]) {scount=scount+1}
####使用的手臂在m個以下，而且該次實驗是失敗的，記錄下該次實驗的成功總次數
if (taget<=ru[j] & scount<m) {
mtotal=c(mtotal,scount)
break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
mstep(a=1,b=1,m=9,n=100)
mstep(a=1,b=1,m=9,n=100)
mstep(a=1,b=1,m=9,n=100)
mstep(a=1,b=1,m=9,n=100)
mstep(a=1,b=1,m=9,n=100)
mstep(a=1,b=1,m=9,n=100)
mstep(a=1,b=1,m=9,n=100)
mstep=function(a,b,m,n){
rb=rbeta(n = n,shape1 = a,shape2 = b)
list=c()
mtotal=c()
p=0
count=0
for (i in 1:n){
taget=rb[i]
scount=0
if (length(list)>=n){break}
for (j in 1:n){
if (length(list)>=n){break}
###如果換手臂的次數大於m,則找出成功率最高的做下去
if (length(mtotal)==m) {taget=rb[which.max(mtotal)]}
ru=runif(n)
###從beta分配抽出來的如果比uniform大，則給S,反之給F
p=ifelse(test = taget>=ru[j],"S","F")
###收集每次的實驗結果
list=c(list,p)
###累計該手臂成功的次數
if (taget>=ru[j]) {scount=scount+1}
####使用的手臂在m個以下，而且該次實驗是失敗的，記錄下該次實驗的成功總次數
if (taget<ru[j] & length(mtotal)<m) {
mtotal=c(mtotal,scount)
break
}
}
}
persent=sum(list=="F")/n
list(list,persent,mtotal)
}
mstep(a=1,b=1,m=31,n=1000)
for (i in 1:500){
aa=mstep(a=1,b=1,m=31,n=1000)
v=v+aa[[2]]
}
v/1000
v=0
for (i in 1:500){
aa=mstep(a=1,b=1,m=31,n=1000)
v=v+aa[[2]]
}
v=0
for (i in 1:500){
aa=mstep(a=1,b=1,m=31,n=1000)
v=v+aa[[2]]
}
v/1000
v=0
for (i in 1:500){
v=v+mstep(a=1,b=1,m=31,n=1000)$persent
}
v=number(500)
v=numbers(500)
v=rep(0,500)
v=rep(0,500)
for (i in 1:500){
v[i]=mstep(a=1,b=1,m=31,n=1000)$persent
}
for (i in 1:500){
v[i]=mstep(a=1,b=1,m=31,n=1000)[[2]]
}
mean(v)
v=rep(0,500)
for (i in 1:500){
v[i]=mstep(a=1,b=1,m=31,n=1000)[[2]]
}
mean(v)
