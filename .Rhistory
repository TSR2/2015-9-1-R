C5.0(`Method Type`~.,data=pp)
v=sample(0:100,20,replace = T)
v
o=cut(v,breaks = c(0,40,50,70,100))
o
?cut
v
o
o=cut(v,breaks = c(-1,40,50,70,100))
o
o=cut(v,breaks = c(0,40,50,70,100),include.lowest = T)
o
library(foreign)
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav"
,to.data.frame=T)
vv
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav"
,to.data.frame=T)
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav",to.data.frame=T)
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav",header=T,to.data.frame=T)
vv
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav")
?read.spss
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav",reencode="UTF-8")
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\bankloan需要量化.sav",reencode="UTF-8")
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\bankloan需要量化.sav",use.value.labels=T)
vv
vv=read.csv("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\bankloan需要量化.csv")
vv
head(vv)
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\bankloan需要量化.sav",use.value.labels=T)
mean
library("e1071", lib.loc="~/R/win-library/3.2")
library(e1071)
go=read.table("C:/Users/tsr/Desktop/額外檔案/新文字文件.txt",sep="",header=T)
?svm
?merge
?data.frame
p=list(c('a','b'),c('c','d'))
p
as.data.frame(p)
as.data.frame()
?as.data.frame()
rbind(p)
do.call(p,rbind)
sapply(p,rbind)
apply(p,rbind)
apply(p,1,rbind)
sapply(p,rbind)
as.data.frame(p,)
sapply(p,cbind)
as.data.frame(p)
list(1,2)
?"option"
lm(iris[,1]~Sepal.Width,data=iris)
lm(iris[,1]~'Sepal.Width',data=iris)
lm(iris[,1]~expression('Sepal.Width'),data=iris)
lm(expression('Sepal.Length'~ 'Sepal.Width'),data=iris)
lm(expression('Sepal.Length'~ 'Sepal.Width'),data=iris)
lm(expression('Sepal.Length~ Sepal.Width'),data=iris)
lm(as.formula('Sepal.Length~ Sepal.Width'),data=iris)
lm(as.formula('Sepal.Length~ Sepal.Width+I(Sepal.Width:Petal.Length)'),data=iris)
?lm
lm(as.formula('Sepal.Length~ Sepal.Width+Sepal.Width:Petal.Length'),data=iris)
aa=lm(as.formula('Sepal.Length~ Sepal.Width+Sepal.Width:Petal.Length'),data=iris)
summary(aa)
step(aa)
lm(as.formula('Sepal.Length~ Sepal.Width+Petal.Length+Sepal.Width:Petal.Length'),data=iris)
ss=lm(as.formula('Sepal.Length~ Sepal.Width+Petal.Length+Sepal.Width:Petal.Length'),data=iris)
summary(ss)
aa1=sprintf('%02d',1:11)
tt1=paste('各縣市當月加油站汽柴油銷售量分析表opendata104',aa1,'.csv',sep='')
realpath='C:/Users/TSR/Desktop/各縣市汽車加油站汽柴油銷售統計分析表/'
allpath=paste(realpath,tt1,sep='')
for (j in 1:11){
aaa=readLines(allpath[j],encoding = 'UTF-8')
aaa1=aaa[-c(1:5,28,29)]
aaa2=strsplit(aaa1,split = ',')
#aaa2[[1]] %>% is
#創建資料框
test1=matrix('0',nrow=22,ncol=10)
for (i in 1:22){
test1[i,]=aaa2[[i]]
}
test1 %<>% as.data.frame()
test1
###names
tablename=c('縣市別','x5','x5-x10','x10-x15','x15-x20','x20-x25','x25-x30'
,'x30-x40','x40','total')
names(test1)=tablename
test1$month=j
if(j==1){
alldata=test1
}else{
alldata=rbind(alldata,test1)
}
}
alldata
library(magrittr)
library(plyr)
library(dplyr)
aa1=sprintf('%02d',1:11)
tt1=paste('各縣市當月加油站汽柴油銷售量分析表opendata104',aa1,'.csv',sep='')
realpath='C:/Users/TSR/Desktop/各縣市汽車加油站汽柴油銷售統計分析表/'
allpath=paste(realpath,tt1,sep='')
for (j in 1:11){
aaa=readLines(allpath[j],encoding = 'UTF-8')
aaa1=aaa[-c(1:5,28,29)]
aaa2=strsplit(aaa1,split = ',')
#aaa2[[1]] %>% is
#創建資料框
test1=matrix('0',nrow=22,ncol=10)
for (i in 1:22){
test1[i,]=aaa2[[i]]
}
test1 %<>% as.data.frame()
test1
###names
tablename=c('縣市別','x5','x5-x10','x10-x15','x15-x20','x20-x25','x25-x30'
,'x30-x40','x40','total')
names(test1)=tablename
test1$month=j
if(j==1){
alldata=test1
}else{
alldata=rbind(alldata,test1)
}
}
alldata
alldata
alldata
alldata
library(magrittr)
library(plyr)
library(dplyr)
alldata %>%　filter(month=1)
alldata %>%　filter(month==1)
alldata[1,]
alldata[1,2:9]
alldata[1,2:9] %>% barplot()
alldata[1,2:9] %>% hist()
alldata[1,2:9] %>% hist(breaks = names(alldata)[2:9],freq = .)
alldata[1,2:9] %>% barplot(width = .,names.arg = names(alldata)[2:9])
barplot(1:10)
barplot(1:10,names.arg = '1-1')
barplot(1:10,names.arg = '1-1',legend.text = '1-1')
barplot(1:10,names.arg = c('1-1','2'),legend.text = '1-1')
barplot(1:10,names.arg = c('1-1'))
barplot(1:10,axes = '1-1',names.arg = c('1-1'))
barplot(1:10,names.arg = c('1-1'))
?barplot()
require(grDevices) # for colours
tN <- table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
tN
alldata[1,2:9]
alldata[1,2:9] %>% barplot(width = .)
alldata[1,2:9] %>% barplot(height = .)
parnames=alldata %>% names %>%　'['(2:9)
parnames
bplot=function(x){
y=x[2:9]
names(y)=parnames
barplot(y)
}
bplot(alldata[1,])
tN %>%ｉｓ
tN %>% is
x=alldata[1,]
y=x[2:9]
y
barplot(y)
barplot(as.matrix(y))
bplot=function(x){
y=x[2:9]
#names(y)=parnames
barplot(as.matrix(y))
}
bplot(alldata[1,])
bplot(alldata[2,])
bplot=function(x){
y=x[2:9]
#names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep=''))
}
par(mfrow=c(5,5))
for (i in 1:25){
bplot(alldata[i,])
}
par(mfrow=c(5,5))
for (i in 1:25){
bplot(alldata[i,])
}
par(mfrow=c(5,5),mar=rep(0.5,4))
for (i in 1:25){
bplot(alldata[i,])
}
alldata[1,]
alldata$縣市別=as.character(alldata$縣市別)
as.character(alldata$縣市別)
alldata$縣市別=as.character(alldata$縣市別)
par(mfrow=c(5,5),mar=rep(0.5,4))
for (i in 1:25){
bplot(alldata[i,])
}
alldata[1,]
par(mfrow=c(5,5),mar=rep(0.7,4))
for (i in 1:25){
bplot(alldata[i,])
}
alldata[1,]
tN <- table(Ni <- stats::rpois(100, lambda = 5))
tN %>% is
r <- barplot(tN, col = rainbow(20))
#- type = "h" plotting *is* 'bar'plot
lines(r, tN, type = "h", col = "red", lwd = 2)
barplot(tN, space = 1.5, axisnames = FALSE,
sub = "barplot(..., space= 1.5, axisnames = FALSE)")
barplot(VADeaths, plot = FALSE)
barplot(VADeaths, plot = FALSE, beside = TRUE)
par(mfrow=c(5,5),mar=rep(0.7,4))
for (i in 1:25){
bplot(alldata[i,])
}
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
bplot=function(x){
y=x[2:9]
#names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
}
par(mfrow=c(5,5),mar=rep(0.7,4))
for (i in 1:25){
bplot(alldata[i,])
}
alldata %>%　filter(month==1) %>% apply(., 1, bplot)
bplot=function(x){
y=x[2:9]
names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
}
alldata %>%　filter(month==1) %>% apply(., 1, bplot)
alldata %>%　filter(month==1)
aa=alldata %>%　filter(month==1)
apply(aa, 1, bplot)
bplot(alldata[i,])
apply(aa, 2, bplot)
apply(aa, 1, bplot)
par(mfrow=c(5,5),mar=rep(0.7,4))
apply(aa, 1, bplot)
barplot(VADeaths, angle = 15+10*1:5, density = 20, col = "black",
legend = rownames(VADeaths))
title(main = list("Death Rates in Virginia", font = 4))
VADeaths
bplot2=function(x){
y=x[2:9]
y=t(y)
names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
}
apply(aa, 1, bplot2)
apply(aa, 1,dim)
apply(aa, 1,dim)
sapply(aa, 1,dim)
apply(aa, 1,length)
alldata[1,] %>%　dim
alldata[1,] %>% is
alldata[1,] %>% length
alldata[1,] %>% dim
bplot=function(x){
y=x[2:9]
if(dim(y)[1]==1){
}else y=t(y)
names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
}
apply(aa, 1,bplot)
bplot=function(x){
y=x[2:9]
if(dim(y)[1]==1){
}else {y=t(y)}
names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
}
apply(aa, 1, bplot2)
apply(aa, 1, bplot2)
apply(aa, 1,bplot)
bplot=function(x){
y=x[2:9]
if(dim(y)[1]==NULL){y=t(y)}
names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
}
apply(aa, 1, bplot2)
apply(aa, 1,bplot)
bplot=function(x){
y=x[2:9]
if(is.na(dim(y)[1])){y=t(y)}
names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
}
apply(aa, 1,bplot)
alldata[1,] %>% dim
alldata[1,] %>% is.vector()
bplot=function(x){
y=x[2:9]
if(is.vector(y)) y=t(y)
names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,80))
}
apply(aa, 1,bplot)
par(mfrow=c(5,5),mar=rep(0.7,4))
apply(aa, 1,bplot)
par(mfrow=c(5,5),mar=rep(0.7,4))
apply(aa, 1,bplot)
par(mfrow=c(5,5),mar=rep(0.7,4))
for (i in 1:22){
bplot(alldata[i,])
}
alldata
write.csv(x = alldata,file='C:/Users/TSR/Desktop/各縣市汽車加油站汽柴油銷售統計分析表/alldata.csv')
apply(aa, 1,bplot)
par(mfrow=c(5,5),mar=rep(0.7,4))
aa=alldata %>%　filter(month==1)
apply(aa, 1, bplot)
aa
aa %>% colSums()
aa[,2:9] %>% colSums()
aa
aa[,2:9]
aa[,2] %>% is
aa[,2:9] %>% colSums()
aa[,2:9] %>%as.numeric()%>%   colSums()
aa[,2:9] %>%as.numeric()
aa[,2:9]
aa[,2] %>% as.numeric()
aa[,2]
alldata[,2]
?as.data.frame
aa1=sprintf('%02d',1:11)
tt1=paste('各縣市當月加油站汽柴油銷售量分析表opendata104',aa1,'.csv',sep='')
#######路徑
realpath='C:/Users/TSR/Desktop/各縣市汽車加油站汽柴油銷售統計分析表/'
allpath=paste(realpath,tt1,sep='')
for (j in 1:11){
aaa=readLines(allpath[j],encoding = 'UTF-8')
aaa1=aaa[-c(1:5,28,29)]
aaa2=strsplit(aaa1,split = ',')
#aaa2[[1]] %>% is
#創建資料框
test1=matrix('0',nrow=22,ncol=10)
for (i in 1:22){
test1[i,]=aaa2[[i]]
}
test1 %<>% as.data.frame(.,stringsAsFactors=F)
test1
###names
tablename=c('縣市別','x5','x5-x10','x10-x15','x15-x20','x20-x25','x25-x30'
,'x30-x40','x40','total')
names(test1)=tablename
test1$month=j
if(j==1){
alldata=test1
}else{
alldata=rbind(alldata,test1)
}
}
alldata[,2] %>% is
alldata[,1] %>% is
alldata[,3] %>% is
alldata[,3]
for (i in 2:10){
alldata[,i]=as.numeric(alldata[,i])
}
alldata[,2] %>% is
###向量化
par(mfrow=c(5,5),mar=rep(0.7,4))
aa=alldata %>%　filter(month==1)
apply(aa, 1, bplot)
aa[,2] %>%   colSums()
aa[,2]
aa[,2:9] %>%   colSums()
alldata %>%　group_by('縣市別') %>%　apply(.,2,sum)
alldata
alldata %>% names
alldata %>%　group_by('縣市別')
alldata %>%　group_by(縣市別)
alldata %>%　group_by(縣市別) %>%　apply(.[,2:9],2,sum) %>%
1
alldata %>%　group_by(縣市別) %>%　apply(.[,2:9],2,sum) %>% bplot
alldata %>%　group_by(縣市別) %>% '['(,2:9)
alldata %>%　group_by(縣市別) %>% '['(,2:9) %>% colSums()
alldata %>%　group_by(縣市別) %>% '['(,2:9) %>% colSums() %>% bplot
alldata %>% '['(,2:9) %>%　group_by(縣市別)
apply(aa, 1, bplot)
par(mfrow=c(5,5),mar=rep(0.7,4))
aa=alldata %>%　filter(month==1)
apply(aa, 1, bplot)
?summarise
alldata %>%　group_by(縣市別) %>% do(aa=colSums(.[2:9]))
alldata %>%　group_by(縣市別) %>% do(data.frame(aa=colSums(.[2:9]))
)
?do
alldata %>%　group_by(縣市別) %>% do(as.data.frame(aa=colSums(.[2:9]))
)
alldata %>%　group_by(縣市別) %>% do(aa=colSums(.[2:9])
)
g1=alldata %>%　group_by(縣市別) %>% do(aa=colSums(.[2:9]))
g1$aa[[1]]
data.frame(g1$aa[[1]])
data.frame(g1)
g1
g1 %>% dim
g1[,1]
g1[1,]
g1[1,][1]
g1[1,][[1]]
g1[1,][[2]]
g1[1,][[2]][[1]]
test=function(x){
x[[2]][[1]]
}
apply(g1,1,test)
lapply(g1,1,test)
apply(g1,1,test)
g1[1,][[2]][[1]]
g1[1,][2][[1]]
test=function(x){
x[2][[1]]
}
apply(g1,1,test)
g1[1,][2][[1]]
pp1=apply(g1,1,test)
t(pp1)
g1[,1]
cbind(g1[,1],t(pp1))
cbind(g1[,1],t(pp1)) %>% is
test=function(x){
data.frame(x[2][[1]])
}
pp1=apply(g1,1,test)
cbind(g1[,1],t(pp1)) %>% is
apply(g1,1,test)
test=function(x){
x[2][[1]]
}
apply(g1,1,test)
pp1=apply(g1,1,test)
cbind(g1[,1],t(pp1)) %>% is
gsum=cbind(g1[,1],t(pp1))
apply(gsum,1,bplot)
bplot=function(x,max=80){
y=x[2:9]
if(is.vector(y)) y=t(y)
names(y)=parnames
barplot(as.matrix(y),main=paste(x[1],x[11],sep='_'),ylim=c(0,max))
}
apply(gsum,1,bplot,max=1000)
par(mfrow=c(5,5),mar=rep(0.7,4))
apply(gsum,1,bplot,max=1000)
g1[1,][2][[1]]
g1[1,][[2]][[1]]
g1[1,2][[1]]
g1[1,2]
g1[1,2][[1]]
g1$aa
data.frame(g1$aa)
matrix(g1$aa)
g1$aa
do.call(g1$aa,rbind)
do.call(rbind,g1$aa)
pp1=do.call(rbind,g1$aa)
gsum=cbind(g1[,1],pp1))
g1[,1]
gsum=cbind(g1[,1],pp1))
gsum=cbind(g1[,1],pp1)
gsum
Reduce(rbind,g1$aa)
Reduce(rbind,g1$aa) %>% is
pp1Reduce(rbind,g1$aa)
gsum=cbind(g1[,1],pp1)
pp1=Reduce(rbind,g1$aa)
gsum=cbind(g1[,1],pp1)
gsum
g1=alldata %>%　group_by(縣市別) %>% do(aa=colSums(.[2:9]))
pp1=do.call(rbind,g1$aa)
gsum=cbind(g1[,1],pp1)
par(mfrow=c(5,5),mar=rep(0.7,4))
apply(gsum,1,bplot,max=1000)
summary(alldata)
apply(gsum,1,bplot,max=1000)
par(mfrow=c(5,5),mar=rep(2,4))
apply(gsum,1,bplot,max=1000)
alldata %>% filter(縣市別=='臺北市') %>% boxplot()
alldata %>% filter(縣市別=='臺北市') %>% '['(2:9) %>%   boxplot()
par(mfrow=c(1,1))
alldata %>% filter(縣市別=='臺北市') %>% '['(2:9) %>%   boxplot()
alldata %>% group_by(縣市別) %>% do(dd=boxplot(.[,2:9]))
par(mfrow=c(5,5),mar=rep(0.7,4))
alldata %>% group_by(縣市別) %>% do(dd=boxplot(.[,2:9]))
alldata %>% group_by(縣市別) %>% do(dd=boxplot(.[,2:9],main=.[1,1]))
par(mfrow=c(5,5),mar=rep(0.7,4))
alldata %>% group_by(縣市別) %>% do(dd=boxplot(.[,2:9],main=.[1,1]))
par(mfrow=c(5,5),mar=rep(0.7,4))
alldata %>% group_by(縣市別) %>% do(dd=boxplot(t(.[,2:9]),main=.[1,1]))
alldata %>% filter(縣市別=='桃園縣')
apply(aa, 1, bplot)
apply(gsum,1,bplot,max=1000)
alldata %>% filter(縣市別=='臺北市') %>% '['(2:9) %>%   boxplot()
par(mfrow=c(5,5),mar=rep(0.7,4))
alldata %>% group_by(縣市別) %>% do(dd=boxplot(.[,2:9],main=.[1,1]))
par(mfrow=c(5,5),mar=rep(0.7,4))
alldata %>% group_by(縣市別) %>% do(dd=boxplot(t(.[,2:9]),main=.[1,1]))
