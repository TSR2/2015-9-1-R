x
}
ff=sq(c(3,11))
format(ff,digits = 20)
options(digits = 10)
gg=sqrt(c(3,11))
format(gg,digits = 20)
################
a=c(expression(x^2-y),expression(x^2-y^2))
a[2]
ta=c("x","y")
m=NULL
m=c(m,D(a[1],ta[1]))
is(m)
sqq=function(ex=a){
x=1;y=1;s=100;
ta=c("x","y")
m=NULL
for (j in 1:2){
for(i in 1:2){
m[i+j-1]=D(ex[i],ta[j])
}
}
m
}
sqq()
################################ deci tree
library(rpart)
library(maptree)
pp=rpart(Species~.,data=iris)
draw.tree(pp)
#######################svm
library(e1071)
x=iris
r=sample(1:150,130)
train=x[r,]
test=x[-r,]
ss=svm(Species~.,data=train)
aa=predict(ss,test[,1:4])
table(test[,5],aa)
#######################
library(neuralnet)
A=matrix(1:16,ncol=4,byrow = T)
B=matrix(1:16,ncol=4)
A+B
D=A %*% B
D
A*B
A[-3,]*b[,3]
A[,-3]*b[-3,]
library(rpart)
library(maptree)
pp=rpart(Species~.,data=iris)
draw.tree(pp)
read.table("C:/Userstsr/Desktop/額外檔案/新文字文件.txt",sep=" ",header=T)
read.table("C:/Users/tsr/Desktop/額外檔案/新文字文件.txt",sep=" ",header=T)
read.table("C:/Users/tsr/Desktop/額外檔案/新文字文件.txt",sep=" ",header=T)
read.table("C:/Users/tsr/Desktop/額外檔案/新文字文件.txt",sep="",header=T)
go=read.table("C:/Users/tsr/Desktop/額外檔案/新文字文件.txt",sep="",header=T)
names(go)
mode=rpart(PlayTennis~.,data=go)
draw.tree(mode)
draw.tree(mode)
mode
go=go[,-1]
mode=rpart(PlayTennis~.,data=go)
mode
draw.tree(mode)
pp=rpart(Species~.,data=iris)
pp
draw.tree(pp)
go
draw.tree(mode)
mode=rpart(PlayTennis~.,data=go)
plot(mode)
mode=rpart(PlayTennis~.,data=go)
mode
rpart.control(minsplit = 2,cp=0)
mode=rpart(PlayTennis~.,data=go,)
mode
rpart.control(minsplit = 2,cp=0,minbucket = 2)
mode=rpart(PlayTennis~.,data=go)
mode
mode=rpart(PlayTennis~.,data=go,rpart.control(minsplit = 2,cp=0,minbucket = 2))
mode=rpart(PlayTennis~.,data=go,rpart.control(minsplit = 2,cp=0))
mode=rpart(formula = PlayTennis~.,data=go,rpart.control(minsplit = 2,cp=0))
mode=rpart(formula = PlayTennis~.,data=go,control = rpart.control(minsplit = 2,cp=0))
mode
draw.tree(mode)
plot(mode)
text(mode)
par(mai=c(0,0,0,0))
plot(mode)
text(mode)
mode=rpart(formula = PlayTennis~.,data=go,control = rpart.control(minsplit = 5,cp=0))
par(mai=c(0,0,0,0))
plot(mode)
text(mode)
library(C50)
C5.0(go)
C5.0(PlayTennis~.,data=go)
C5.0(PlayTennis~.,data=go)
f=C5.0(PlayTennis~.,data=go)
summary(f)
draw.tree(f)
plot(f)
pp=rpart(Species~.,data=iris)
summary(pp)
pp
draw.tree(pp)
plot(f)
is(f)
summary(pp)
draw.tree(pp)
names(pp)
pp[11]
plot(pp)
text(pp)
par(mai=rep(0.1,4))
plot(pp)
text(pp)
par(mai=rep(0.5,4))
plot(pp)
text(pp)
draw.tree(pp)
factor(1:5)
predict(pp,iris[,1:4])
predict(pp,iris[,1:4],type="class")
predict(pp,iris[1:61,1:4],type="class")
table(iris[,5],A)
table(iris[1:61,5],A)
A
A=predict(pp,iris[1:61,1:4],type="class")
table(iris[1:61,5],A)
A=factor(predict(pp,iris[1:61,1:4],type="class"),levels = levels(iris[1:61,5]))
table(iris[1:61,5],A)
A
evels(iris[1:61,5])
levels(iris[1:61,5])
A=predict(pp,as.character(iris[1:61,1:4]),type="class")
draw.tree(pp)
plot(f)
data
data()
library(magrittr)
library(plyr)
library(dplyr)
CO2 %>% head
data()
methods("data.frame")
methods(data.frame)
methods(class=data.frame)
methods(class=POSIXct)
"2015-11-02" %>% as.POSIXct()
a="2015-11-02" %>% as.POSIXct()
a %>% is
methods(class=POSIXt)
methods(class="POSIXt")
methods(class="POSIXct")
a="2015-11-02 10:20:23" %>% as.POSIXct()
a %>% is
summary(a)
show(a)
"["(a)
b=1:3
b %>% is
b %>% methods
methods(class="vector")
methods(class="POSIXct")
methods(class="numeric")
"["(b)
"[["(b)
"[["(a)
"["(a)
"["(b)
]
"["(b)[1]
"["("b")
x=1
attr(x,"foo")=1
x
library(magrittr)
library(plyr)
library(dplyr)
x %>% class
attr(x)
x %>% attributes()
attr(x,"class")="foo"
x %>% attributes()
x=1
attr(x,"class")="foo"
x %>% attributes()
x
install.packages("prpr")
install.packages("pryr")
library(pryr)
x %>% otype
x %>% class
methods(print)
methods(class="histogram")
methods("histogram")
methods(histogram)
mean
methods(mean)
teacher = function(x,...) UseMethod("teacher")
teacher
teacher = function(x,...) UseMethod("teacher")
teacher.qw=function(x) print("1234")
teacher.as=function(x) print("11111111111")
attr(aa,"qw")=1
aa
rm(aa)
aa
attr(aa,"qw")=1
aa
attr(aa,'class')="qw"
aa=1
attr(aa,'class')="qw"
aa
teacher(aa)
install.packages("pryr")
library(magrittr)
library(plyr)
library(dplyr)
library(pryr)
iris %>% "["(Species)
iris %>% "["
"["(iris)
"["(iris)[1]
iris %>% "["(.)
iris %>% "["(.)[1]
iris %>% select(1)
iris %>% select(.,c(1,2))
iris %>% select(.,1:3)
iris %>% select(1:3)
library(plyr)
library(dplyr)
library(magrittr)
spe=read.csv("c:/Users/tsr/Desktop/上課用檔案/資料視覺化/DoubsFishData/NEwR data/DoubsSpe.csv")
env=read.csv("c:/Users/tsr/Desktop/上課用檔案/資料視覺化/DoubsFishData/NEwR data/DoubsEnv.csv")
spa=read.csv("c:/Users/tsr/Desktop/上課用檔案/資料視覺化/DoubsFishData/NEwR data/DoubsSpa.csv")
spe[1:5,]
env[1:5,]
spa[1:5,]
spe %>% dim
env %>% dim
spa %>% dim
spe %>% names
env %>% names
spa %>% names
spa %>% summary()
env %>% summary()
spe %>% summary()
spa %>% summary()
env %>% summary()
spe %>% summary()
spe %>% range
spe
spe %>% dim
spa[1:5,]
plot(spe)
plot(spe[,2:3])
plot(spa[,2:3])
plot(spa[,2:3],type="l")
text(x=spa$x,y=spa$y,labels = spa$X)
text(x=spa$x,y=spa$y,labels = spa$X,cex = 2)
text(x=spa$x,y=spa$y,labels = spa$X,cex = 1)
plot(spa[,2:3],type="l")
text(x=spa$x,y=spa$y,labels = spa$X,cex = 1)
?plot
plot(spa[,2:3],type="l")
text(x=spa$x,y=spa$y,labels = spa$X,cex = 1)
spe[1:5,]
plot(spa[,2:3])
plot(spa[,2:3],cex=spe$TRU)
plot(spa[,2:3],cex=spe$TRU,bg=21)
plot(spa[,2:3],cex=spe$TRU,bg=20)
line(spa[,2:3])
lines(spa[,2:3])
lines(spa[,2:3],col="blue")
plot(spa[,2:3],cex=spe$TRU,main="TRU")
lines(spa[,2:3],col="blue")
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3])
points(spa[,2:3],cex=spe$TRU)
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU)
lines(spa[,2:3],col="blue",lwd=2)
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU)
?points
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU,bg=25)
points(spa[,2:3],cex=spe$TRU,pch=25)
points(spa[,2:3],cex=spe$TRU,pch=25,bg=1)
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU,pch=25,bg=1)
points(spa[,2:3],cex=spe$TRU,pch=25,bg=3)
points(spa[,2:3],cex=spe$TRU,pch=25,bg=2)
points(spa[,2:3],cex=spe$TRU,pch=25,bg=1)
points(spa[,2:3],cex=spe$TRU,pch=23,bg=1)
points(spa[,2:3],cex=spe$TRU,pch=21,bg=1)
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU,pch=21,bg=1)
points(spa[,2:3],cex=spe$TRU,pch=21)
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU,pch=21)
points(spa[,2:3],cex=spe$TRU,pch=21,col="blue")
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU,pch=21,col="blue")
spe[1:5,]
apply(spe,2,sd)
spesd %>% sort %>% head(n=4)
spesd=apply(spe,2,sd)
spesd %>% sort %>% head(n=4)
par(mfrow=c(2,2))
spesd=apply(spe,2,sd)
top4=spesd %>% sort %>% head(n=4)
par(mfrow=c(2,2))
for (i in 1:4){
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe[names(top4)[i]],pch=21,col="blue")
}
names(top4)[i]
spe["TRU"]
spe["HOT"]
for (i in 1:4){
#plot(spa[,2:3],type="l",main="TRU")
#points(spa[,2:3],cex=spe[names(top4)[i]],pch=21,col="blue")
print(spe[names(top4)[i]])
}
is(spe[names(top4)[i]])
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe[names(top4)[i]],pch=21,col="blue")
print(spe[names(top4)[i]])
print(spe[names(top4)[[i]])
print(spe[[names(top4)[i]]])
spesd=apply(spe,2,sd)
top4=spesd %>% sort %>% head(n=4)
par(mfrow=c(2,2))
for (i in 1:4){
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe[[names(top4)[i]]],pch=21,col="blue")
}
spe %>% apply(.,2,sd) %>% sort(desc) %>% head()
spe %>% apply(.,2,sd) %>% arrange(desc) %>% head()
spe %>% apply(.,2,sd)
spe %>% apply(.,2,sd) %>% arrange()
1:30 %>% arrange()
?sort
spe %>% apply(.,2,sd) %>% sort(decreasing = T) %>% head()
spe[,-1] %>% apply(.,2,sd) %>% sort(decreasing = T) %>% head()
top4=spe[,-1] %>% apply(.,2,sd) %>% sort(decreasing = T) %>% head(n=4)
par(mfrow=c(2,2))
for (i in 1:4){
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe[[names(top4)[i]]],pch=21,col="blue")
}
par(mfrow=c(2,2))
for (i in 1:4){
plot(spa[,2:3],type="l",main=names(top4)[i])
points(spa[,2:3],cex=spe[[names(top4)[i]]],pch=21,col="blue")
}
par(mfrow=c(1,2))
spe %>% names
spe[,-X] %>% names
spe[,-'X'] %>% names
spe[,-1] %>% names
spe[,-1] %>% apply(.,2,sum) %>% sort()
spe[,-1] %>% apply(.>0,2,sum) %>% sort()
spe[,-1]>0 %>% apply(.,2,sum) %>% sort()
(spe[,-1]>0) %>% apply(.,2,sum) %>% sort()
(spe[,-1]>0) %>% apply(.,2,sum) %>% sort() %>% hist()
(spe[,-1]>0) %>% apply(.,2,sum) %>% sort() %>% hist(,breaks = seq(0,30,5))
(spe[,-1]>0) %>% apply(.,2,sum) %>% sort() %>% hist(.,breaks = seq(0,30,5))
(spe[,-1]>0) %>% apply(.,2,sum) %>% sort()
%>% hist(.,breaks = seq(0,30,5))
(spe[,-1]>0) %>% apply(.,2,sum) %>%
sort() %>% hist(.,breaks = seq(0,30,5))
boxplot(iris[,1:4])
pairs(env)
pairs(env,panel = panel.smooth)
pairs(env,panel = panel.smooth,diag.panel = hist)
pairs(env,panel = panel.smooth,diag.panel = panel.hist)
pairs(env,panel = panel.smooth)
pairs(env,panel = panel.smooth,diag.panel = panel.hist)
?diag.panel
??diag.panel
par(mfrow=c(1,1),pty="s")
pairs(env,panel = panel.smooth,diag.panel = panel.hist)
methods(panel)
methods(class="panel")
methods("panel")
pairs(env,panel = panel.smooth,diag.panel = panel.hist)
panel.pairs(env,panel = panel.smooth,diag.panel = panel.hist)
pairs(env,panel = panel.smooth,diag.panel = panel.hist)
env %>% summary()
sapply(iris[,1:4],summary)
iris[,1:4] %>% summary
x=iris
names(x)=paste("v",1:5,sep="")
aggregate(cbind(v1,v2)~v5,data=x,sum)
x %>% group_by(v5) %>% summarise(mv1=sum(v1),mv2=sum(v2))
install.packages("moments")
library(moments)
my_summary <- function(x) {
require(moments)
funs <- c(mean, sd, skewness, kurtosis)
sapply(funs, function(f) f(x, na.rm = TRUE))
}
sapply(iris[,1:3], my_summary)
c(mean, sd, skewness, kurtosis)
with(x,sd(v1))
with(x,sd(v1),sd(v2))
with(x,c(sd(v1),sd(v2)))
sapply(iris[,1:3], my_summary)
c(sd(x$v1),sd(x$v2))
c(mean, sd, skewness, kurtosis)
uns <- c(mean, sd, skewness, kurtosis)
funs <- c(mean, sd, skewness, kurtosis)
fums[1](1:10)
funs[1](1:10)
funs[1]
1:10 %>%  funs[1]
funs[1](1:10)
mean
mean(1:10)
funs(1:10)
funs[1](1:10)
funs[[1]](1:10)
is(funs)
funs
plot(x$v1)
x$v1 %>% sort %>% plot
x$v1 %>% hist
x$v1 %>% qqplot()
x$v1 %>% qqplot(,y = rnorm(100,mean = mean(x$v1),sd = sd(x$v1)))
qqline()
x$v1 %>% qqplot(.,y = no))
x$v1 %>% qqplot(,y = no))
no=rnorm(100,mean = mean(x$v1),sd = sd(x$v1)
x$v1 %>% qqplot(,y = no))
x$v1 %>% qqplot(.,y = no))
no=rnorm(100,mean = mean(x$v1),sd = sd(x$v1))
x$v1 %>% qqplot(.,y = no))
x$v1 %>% qqplot(.,y = no)
qqline(no)
plot(x$v1)
x$v1 %>% hist
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,10,1))
no=rnorm(100,mean = mean(x$v1),sd = sd(x$v1))
x$v1 %>% qqplot(.,y = no)
qqline(no)
qqline(y = no)
x$v1 %>% qqplot(no,y = no)
x$v1 %>% qqplot(x=no,y = no)
qqline(y = no)
qqplot(x=no,y = no)
qqplot(x=no,y = no)
qqline(y = no)
qqline(rnorm(100,10,1))
no
x$v1 %>% qqplot(x=no,y = no)
qqplot(x=no,y = no)
qqline(y = no)
qqplot(x=no,y = no)
qqline(y = no)
qqline(distribution = "normal")
?qqline
qqline(distribution = "qnorm")
qqplot(x=no,y = no)
qqline(distribution = qnorm)
qqline(no,distribution = qnorm)
x$v1 %>% qqnorm()
qqline()
qqline(y=no)
plot(x$v1)
x$v1 %>% hist
x$v1 %>% plot(.,type="l")
x$v1 %>% qqnorm()
qqline(y=no)
x$v1 %>% sort %>% plot
x$v1 %>% qqnorm()
x$v1 %>% sort %>% plot
x$v1 %>% qqnorm()
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline()
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,10,1))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,10,1))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,10,1))
qqplot(rnorm(100,0,1),rnorm(100,0,1))
qqline(rnorm(100,10,1))
qqline(rnorm(100,0,1))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,10,1))
x %$% plot(v1[1:49],v1[2:50])
x$v1 %>% sort %>% plot
sx=x$v1 %>% sort
plot(sx[1:49],sx[2:50])
getwd()
pdf("myplot.pdf", onefile = TRUE)
for(i in 1: 4){
plot(iris[,i])
}
dev.off()
?plot
abline(1,1)
abline(0,1)
