persent=sum(list=="F")/n
list(list,persent,mtotal)
}
v=rep(0,1000)
for (i in 1:1000){
v[i]=Nkfail(a=1,b=1,n=100,N=50)[[2]]
}
mean(v)
library(magrittr)
library(plyr)
library(dplyr)
library(data.table)
library(lattice)
library(ggplot2)
library(readr)
index="c:/Users/tsr/Desktop/上課用檔案/資料視覺化/DoubsFishData"
c=list.files(index,full.names = T)
c
vv=list.files(c[6],full.names = T)
env=read.csv(file=vv[1],row.names = 1)
spe=read.csv(file=vv[3],row.names = 1)
spa=read.csv(file=vv[2],row.names = 1)
index
source('c:/Users/tsr/Desktop/上課用檔案/資料視覺化/DoubsFishData/panelutils.R')
spe[1:5,1:10]
head(spe,n=2)
dim(spe)
colnames(spe)
summary(spe)
range(spe)
ab=table(unlist(spe))
barplot(ab)
par(mfrow=c(1,1))
pp=stack(spe)
names(pp)=c("v1","v2")
head(pp)
boxplot(v1~v2,data=pp)
##計算0的比例
total0=sum(spe==0)
total0/(dim(spe)[1]*dim(spe)[2])
####
plot(spa,asp=1,type="n",main='ll')
lines(spa,col="blue")
text(spa,row.names(spa),cex=0.8,col="red")
text(50,10,labels = "up",cex=1.2,col="red")
text(30,120,labels = "down",cex = 1.2,col="red")
par(mfrow=c(1,4))
plot(spa,asp=1,col="brown",cex=spe$TRU)
lines(spa,col="blue",lwd=2)
plot(spa,asp=1,col="brown",cex=spe$OMB)
lines(spa,col="blue",lwd=2)
plot(spa,asp=1,col="brown",cex=spe$BAR)
lines(spa,col="blue",lwd=2)
plot(spa,asp=1,col="brown",cex=spe$BCO)
lines(spa,col="blue",lwd=2)
su=apply(spe>0,2,sum)
sort(su)
per=100*su/nrow(spe)
per %>% sort() %>% round(.,1)
sit.pres <- apply(spe > 0, 1, sum)
sort(sit.pres)
plot(sit.pres,type="s", las=1, col="gray",
main="Species Richness vs. \n Upstream-Downstream Gradient",
xlab="Positions of sites along the river", ylab="Species richness")
text(sit.pres, row.names(spe), cex=.8, col="red")
barplot(sit.pres)
plot(spa, asp=1, main="Map of Species Richness", pch=21, col="white",
bg="green", cex=5*sit.pres/max(sit.pres), xlab="x coordinate (km)",
ylab="y coordinate (km)")
lines(spa,col="blue")
library(vegan)
?decostand
spe[1:5, 2:4]
spe.pa <- decostand(spe, method="pa")
ee=ifelse(spe>0,1,0)
spe.pa
spe.scal <- decostand(spe, "max")
spe.scal[1:5,2:4]
ee=spe/max(spe)
ee[1:5,2:4]
spe.relsp <- decostand(spe, "total", MARGIN=2)
spe.relsp[1:5,2:4]
ee=spe/sum(spe[,1])
ee[1:5,2:4]
names(env)
windows(title="Bubble maps", 9, 9)
par(mfrow=c(3,4))
for (i in 1:11){
plot(spa, asp=1, main=names(env)[i], pch=21, col="white",
bg=i, cex=5*env[,i]/max(env[,i]), xlab="x", ylab="y")
lines(spa, col="light blue", lwd=2)
}
pp=read_csv('c:/Users/tsr/Desktop/上課用檔案/資料視覺化/hourly_44201_2014.csv')
head(problems(pp))
names(pp)
(names(pp)=make.names(names(pp)))
memory.size()
print(object.size(pp),units = "MB")
str(pp)
pp[1:6,1:5]
is(pp)
table(pp$Time.Local)
pp %>% select(State.Name) %>% unique() %>% nrow()
select(pp,State.Name) %>% unique() %>% nrow()
select(pp, State.Name) %>% unique %>% nrow
summary(pp$Sample.Measurement)
quantile(pp$Sample.Measurement)
quantile(pp$Sample.Measurement,seq(0,1,0.1))
ranking=group_by(pp,state.name,County.Name) %>%
summarise(ozone=mean(pp$Sample.Measurement)) %>%
arrange(ozone)
ranking=group_by(pp,State.name,County.Name) %>%
summarise(ozone=mean(pp$Sample.Measurement)) %>%
arrange(ozone)
ranking=group_by(pp,State.Name,County.Name) %>%
summarise(ozone=mean(pp$Sample.Measurement)) %>%
arrange(ozone)
head(ranking)
ranking=group_by(pp,State.Name,County.Name) %>%
summarise(ozone=mean(pp$Sample.Measurement)) %>%
arrange(desc(ozone))
head(ranking)
ranking=group_by(pp,State.Name,County.Name) %>%
summarise(ozone=mean(pp$Sample.Measurement)) %>%
as.data.frame %>%
arrange(desc(ozone))
head(ranking)
dim(ranking)
tail(ranking)
ranking=group_by(pp,State.Name,County.Name) %>%
summarise(ozone=mean(Sample.Measurement)) %>%
as.data.frame %>%
arrange(desc(ozone))
head(ranking)
tail(ranking)
ranking=group_by(pp,State.Name,County.Name) %>%
summarise(ozone=mean(Sample.Measurement)) %>%
arrange(desc(ozone))
head(ranking)
tail(ranking)
head(ranking)
ranking=group_by(pp,State.Name,County.Name) %>%
summarise(ozone=mean(Sample.Measurement)) %>%
as.data.frame %>%
arrange(desc(ozone))
head(ranking)
tail(ranking)
head(ranking)
filter(pp,State.Name == "California" & County.Name == "Mariposa") %>% nrow
pp$Date.Local[5]
pp$Date.Local[1:5]
filter(ozone, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = factor(months(Date.Local), levels = month.name)) %>%
group_by(month) %>%
summarize(ozone = mean(Sample.Measurement))
filter(ozone, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = factor(months(Date.Local), levels = month.name)) %>%
group_by(month) %>%
summarize(ozone = mean(Sample.Measurement))
filter(pp, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = factor(months(Date.Local), levels = month.name)) %>%
group_by(month) %>%
summarize(ozone = mean(Sample.Measurement))
filter(pp, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = factor(months(Date.Local), levels = month.name)) %>%
group_by(month) %>%
summarize(ozone = mean(Sample.Measurement))
pp=mutate(pp, Date.Local = as.Date(Date.Local))
filter(pp, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = factor(months(Date.Local), levels = month.name)) %>%
group_by(month) %>%
summarize(ozone = mean(Sample.Measurement))
pp=mutate(pp, Date.Local = as.Date(Date.Local))
filter(pp, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = factor(months(Date.Local), levels = month.name)) %>%
group_by(month) %>%
summarize(ozone = mean(Sample.Measurement))
filter(pp, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = factor(months(Date.Local), levels = month.name)) %>%
group_by(month) %>%
summarize(ozone=mean(Sample.Measurement))
filter(pp, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = factor(months(Date.Local), levels = month.name)) %>%
group_by(month)
pp=mutate(pp, Date.Local = as.Date(Date.Local))
filter(pp, State.Name == "California" & County.Name == "Mariposa") %>%
mutate(month = months(Date.Local)) %>%
group_by(month) %>%
summarize(ozone=mean(Sample.Measurement))
?month.name
month.name
months(pp$Date.Local)[1:5]
month(pp$Date.Local)[1:5]
?"date"
(today <- Sys.Date())
format(today, "%d %b %Y")  # with month as a word
(tenweeks <- seq(today, length.out=10, by="1 week")) # next ten weeks
weekdays(today)
months(tenweeks)
months(tenweeks,abbreviate = T)
months(tenweeks,abbreviate = F)
?months
today
oo=Sys.Date()
oo
class(oo)
str(oo)
(today <- Sys.Date())
(tenweeks <- seq(today, length.out=10, by="1 week")) # next ten weeks
months(tenweeks,)
weekdays(today)
?format
(today <- Sys.Date())
format(today, "%d %Y %Y")  # with month as a word
(today <- Sys.Date())
str(oo)
oo=Sys.Date()
class(oo)
str(oo)
oo
?date
summary(oo)
summary(oo,digits = 12)
month.abb
months.Date(oo)
months(oo)
months.POSIXt(oo)
?months
?month
??month
?chron
??chron
attributes(oo)
hist(iris[,1])
x=iris[,1]
sx=(x-mean(x))/sd(x)
ch=rchisq(100,1)
hist(ch)
library(magrittr)
ch %>% log %>% hist
ch %>% log %>% sqrt
ch %>% sqrt %>% hist
ch %>% sqrt %>% log %>% hist
?par
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1))
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1))
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1))
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),main="")
}
y=1:10
y %>% +1
y %>% -mean(y) %>% /sd(y)
y %>% -mean(y)
y %>% -mean(y) %>% /sd(y)
y %>% -mean(y) %>% "/"sd(y)
y %>% -mean(y) %>% *sd(y)
y %>% -mean(y) %>% divide_by(sd(y))
y %>% -mean(y) %>% divide_by(y %>% sd)
y %>% "*"3
y %>% '*'3
y %>% '*'(3)
y %>% *(3)
y %>% '/'(3)
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),ylim=c(0,10),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),ylim=c(0,20),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),ylim=c(0,30),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),ylim=c(0,40),main="")
}
boxplot(iris[,5]~iris[,1])
iris[,5] %>% is
iris[,5]
boxplot( as.character(iris[,5])~iris[,1])
boxplot(iris[,3]~iris[,1])
boxplot(iris[,2]~iris[,1])
boxplot(iris[,1]~iris[,5])
split(iris,f = iris[,5])
hh=split(iris,f = iris[,5])
summary(hh)
sapply(hh, hist)
hh
library(plyr)
laply(hh, hist)
library(plyr)
is(hh)
laply(hh, hist(.[,1]))
attributes(hh)
hh
is(hh)
hh[[1]]
hh[[2]]
hh[2]
x=matrix(c(rep(1,5),seq(0,0.8,0.2)))
qr(x)
x
x=matrix(c(rep(1,5),seq(0,0.8,0.2)),ncol=2)
qr(x)
q=qr(x)
qq=q$qr
qq
t(qq) %*% qq
lsfit(x,y)
x=seq(0,0.8,0.2)
y=c(1,4,6,2,5)
lsfit(x,y)
xx=lsfit(x,y)
fitted(x,0.2)
fitted(xx,0.2)
fitted(xx)
fitted(xx,3)
fitted(xx,x=2)
fitted(xx,x=0)
xx=lsfit(x,y)
xx
predict(xx,0)
predict(xx,0.2)
ls.diag(xx)
xx=lm(y~x)
xx
predict(xx,0.2)
predict(xx)
fitted(xx,x=0)
predict(xx,newdata = 2)
predict(xx,newdata = 2)
xx=lm(y~x)
predict(xx,newdata = 2)
predict(xx,newdata = c(0))
predict(xx,newdata = c(0,2))
predict(objects=xx,newdata = c(0,2))
predict(object=xx,newdata = c(0,2))
predict(object=xx,newdata = c(2))
?predict
predict.lm(object=xx,newdata = 2)
predict.lm(object=xx,newdata = 2,se.fit = T)
fitted(xx,2)
predict.lm(object=xx,newdata = 2,se.fit = T)
predict(object=xx,newdata = 2)
fitted(xx,2)
ls.diag(xx)
n=2
xx=lm(y~x)
predict(object=xx,newdata = n)
n=c(2,3)
xx=lm(y~x)
predict(object=xx,newdata = n)
n=as.data.frame(c(2,3))
xx=lm(y~x)
predict(object=xx,newdata = n)
n=as.data.frame(x=c(2,3))
n
predict(object=xx,newdata = n)
x=seq(0,0.8,0.2)
y=c(1,4,6,2,5)
x
y
xx=lm(y~x)
n=data.frame(x=c(2,3))
predict(object=xx,newdata = n)
library(foreign)
vv=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav")
vv
as.data.frame(vv)
?read.spss
vv=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav"
,to.data.frame=T)
vv
vv=0
vv=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav"
,to.data.frame=T)
vv
density(iris[,1])
dd=density(iris[,1])
plot(dd)
par(mfrow=1)
par(mfrow=c(1,1))
plot(dd)
hist(iris[,1])
plot(dd)
hist(iris[,1])
plot(dd,add=T)
?plot
hist(iris[,1])
lines(dd)
hist(iris[,1],probability = T)
lines(dd)
dd
predict(dd,4)
dd(4)
dd
methods(dd)
class(dd)
methods(density
)
names(dd)
dd[6]
ee=ecdf(iris[,1])
ee
plot(ee)
plot(ee,verticals = T)
plot(ee,verticals = T,do.p=F)
qqplot(rnorm(0,1),rnrom(10,5))
qqplot(rnorm(0,1),rnorm(10,5))
qqplot(rnorm(100,0,1),rnorm(100,10,5))
qqline()
qqline(rnorm(100,0,1),rnorm(100,10,5))
qqplot(rnorm(100,0,1),rnorm(100,0,1))
qqline(rnorm(100,0,1),rnorm(100,0,1))
0
0
qqplot(rnorm(100,0,1),rnorm(100,0,1))
qqline(rnorm(100,0,1))
qqline(rnorm(100,0,5))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,0,5))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,0,1))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,0,1))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,10,1))
boxplot(iris[,1],iris[,2])
boxplot(iris[,1],iris[,2],notch=T)
boxplot(iris[,1],iris[,2],notch=T,col=1:2)
boxplot(iris[,1],iris[,2],iris[,3],notch=T)
boxplot(iris[,1]~iris[,5])
par(mfrow=c(1,1),mai=rep(0,4))
boxplot(iris[,1],iris[,2],iris[,3],notch=T)
boxplot(iris[,1]~iris[,5])
plot(1:10)
par(mfrow=c(1,1),mai=rep(1,4))
plot(1:10)
boxplot(iris[,1],iris[,2],iris[,3],notch=T)
boxplot(iris[,1]~iris[,5])
boxplot(iris[,1],iris[,2],iris[,3],notch=T)
boxplot(iris[,1],iris[,2],iris[,3],names=letters[1:3],notch=T)
??normtest
shapiro.test(1:10)
shapiro.test(1:100)
shapiro.test(1:100)
shapiro.test(1:10)
plot(iris[,1]~iris[,2])
coplot(iris[,1]~iris[,2] )
coplot(iris[,1]~iris[,2] |iris[,5])
library(magrittr)
library(plyr)
library(dplyr)
iris %>% group_by(5)
names(x)=paste("v",1:5,sep="")
x %>% group_by(v5) %>% plot(v1~v2)
x %>% group_by(v5) %>% plot(v1~v2,data=.)
x %>% group_by(v5)
x %>% head
x=iris
names(x)=paste("v",1:5,sep="")
x %>% group_by(v5) %>% plot(v1~v2,data=.)
x %>% group_by(v5) %>% do(m=plot(v1~v2,data=.))
m[1]
x %>% group_by(v5) %>% do(m=plot(v1~v2,data=.))
m
m=x %>% group_by(v5) %>% do(m=plot(v1~v2,data=.))
m
m[1]
m[[1]]
('v',1:5,sep="")
names(x)=paste('v',1:5,sep="")
cc=x %>% group_by(v5) %>% do(model=lm(v1~v2,data=.))
cc$model
cc
cc=x %>% group_by(v5) %>% do(histo=hist(.$v1))
cc
cc$histo
mo=x %>% group_by(v5) %>% do(m=plot(v1~v2,data=.))
mo$m
a=plot(1:10)
a
a=boxplot(1:10)
a
mo=x %>% group_by(v5) %>% do(m=boxplot(v1~v2,data=.))
mo$m
mo$m[[1]]
plot(mo$m[[1]])
mo$m[[1]]
boxplot(mo$m[[1]])
boxplot(mo$m[1])
