col =c("red","blue","green"),pch="abcd" )
aggregate(iris$Sepal.Length~iris$Species,length())
aggregate(iris$Sepal.Length~iris$Species,sum)
aggregate(iris$Sepal.Length~iris$Species,data=iris,sum)
aggregate(iris$Sepal.Length~iris$Species,data=iris,length)
aggregate(Sepal.Length~Species,data=iris,length)
x %>% select(v5)  %>%
group_by(v5) %>% summarise(n=n())
x %>% select(v5)  %>%
group_by(v5) %>% summarise(n=n(),l=length())
x %>% select(v5)  %>%
group_by(v5) %>% summarise(n=n(),l=length(v5))
aggregate(iris[,1]~Species,data=iris,length)
aggregate(iris[,1:2]~Species,data=iris,length)
aggregate(iris~Species,data=iris,length)
aggregate(iris$Sepal.Length+iris$Sepal.Width~Species,data=iris,length)
aggregate(iris[,1:2]~Species,data=iris,length)
aggregate(x=iris,by=Species,sum)
aggregate(x=iris,by=iris$Species,sum)
aggregate(x=iris,by=list(iris$Species),sum)
aggregate(x=iris[,1:4],by=list(iris$Species),sum)
x[,1:4] %>% rowwise() %>% sum
x[,1:4] %>% rowwise()
x[,1:4] %>% rowwise() %>% sum(v1)
x[,1:4] %>% rowwise() %>% sum(.)
?rowwise
x[,1:4] %>% rowwise() %>% summarise(sum())
x[,1:4] %>% rowwise() %>% summarise(sum(.))
x[,1:4] %>% rowwise() %>% summarise(sum(v1))
x[,1:4] %>% rowwise() %>% summarise(sum(v1,v2))
x[,1:4] %>% rowwise()
?.Last.value
.Last.value
.Last.value()
.Last.value
df <- expand.grid(x = 1:3, y = 3:1)
df
df %>% rowwise() %>% do(i = seq(.$x, .$y))
.Last.value %>% summarise(n = length(i))
x
.Last.value
i
ppp=df %>% rowwise() %>% do(i = seq(.$x, .$y))
ppp
is(ppp)
ppp[1]
ppp[1,1]
ppp[1,1][1]
ppp[1,1][[1]]
ppp %>% print
ppp=df %>% rowwise() %>% do(i = seq(.$x, .$y))%>% summarise(n = length(i))
ppp
ppp$n
x[,1:4] %>% colwise() %>% hist
x[,1:4] %>% colwise() %>% hist(.)
x[,1:4] %>% colwise() %>% do( hh=hist(.))
?\do
?do
x %>% group_by(v5) %>% do( hh=hist(v1))
x
x %>% group_by(v5) %>% do( hh=hist(.$v1))
hhh=x %>% group_by(v5) %>% do( hh=hist(.$v1))
hhh$hh
hhh$hh[[1]] %>% plot
ppp
ppp=df %>% rowwise() %>% do(i = seq(.$x, .$y))
ppp
ppp$i
aggregate(Sepal.Length~Species,data=iris,hist)
hhh$hh[[1]] %>% plot
hhh %>% do(bb=.$breaks)
by_cyl <- group_by(mtcars, cyl)
by_cyl
do(by_cyl, head(., 2))
models <- by_cyl %>% do(mod = lm(mpg ~ disp, data = .))
models
summarise(models, rsq = summary(mod)$r.squared)
models %>% do(data.frame(coef = coef(.$mod)))
models %>% do(coef = coef(.$mod))
models %>% do(as.list(coef = coef(.$mod)))
models %>% do(data.frame(
var = names(coef(.$mod)),
coef(summary(.$mod)))
)
summary(lm(iris[,1]~iris[,2]))
summary(lm(iris[,1]~iris[,2])) %>%coef
models %>% do(data.frame(
var = names(coef(.$mod)),
coef(summary(.$mod)))
)
models %>% do(data.frame(
coef(summary(.$mod)))
)
a=summary(lm(iris[,1]~iris[,2]))
names(a)
names(a)[4]
a[4]
a[6]
models %>% do(data.frame(
sig=summary(.$mod)[6]
coef(summary(.$mod)))
)
models %>% do(data.frame(
sig=summary(.$mod)[6]
coef(summary(.$mod)))
)
sig=summary(.$mod)$sigma
models %>% do(data.frame(
sig=summary(.$mod)$sigma
coef(summary(.$mod)))
)
models %>% do(data.frame(
sig=summary(.$mod)
coef(summary(.$mod)))
)
models %>% do(data.frame(
sig=summary(.$mod),
coef(summary(.$mod)))
)
models %>% do(data.frame(
sig=summary(.$mod)[6],
coef(summary(.$mod)))
)
models %>% do(data.frame(1:6,
sig=summary(.$mod)[6],
coef(summary(.$mod)))
)
models %>% do(data.frame(
sig=summary(.$mod)$sigma,
coef(summary(.$mod))))
names(a)
models %>% do(data.frame(
sig=summary(.$mod)$r.squared,
coef(summary(.$mod))))
names(a)
a[1]
models %>% do(data.frame(
sig=summary(.$mod)$r.squared,
call=summary(.$mod)[1],
coef(summary(.$mod))))
models %>% do(data.frame(
sig=summary(.$mod)$r.squared,
coef(summary(.$mod))))
b=lm(iris[,1]~iris[,2])
names(b)
b$qr
names(b)
b$coefficients
b$coef
models %>% summarise(R=.mod$coef)
models %>% summarise(R=mod$coef)
models %>% summarise(R=mod$coefficients)
models %>% do(data.frame(c=.$mod[1]))
b$rank
models %>% summarise(R=mod$rank)
models %>% summarise(R=(mod)$rank)
models %>% summarise(R=coef(mod))
models %>% do(data.frame(c=.$mod[1]))
models %>% do((c=.$mod[1]))
models %>% do(data.frame(c=.$mod[1]))
models %>% do(data.frame(c=.$mod[1],v=.$mod[2]))
names(b)
models %>% do(data.frame(c=.$mod[1],v=.$mod[7]))
models %>% do(data.frame(v=.$mod[7]))
models %>% do(data.frame(v=.$mod[4]))
models %>% do(data.frame(v=.$mod$rank))
names(b)
b[$rank]5]
b[5]
models %>% do(data.frame(v=.$mod[5]))
models %>% do(data.frame(v=.$mod[1]))
models %>% summarise(R=coef(mod))
models %>% summarise(R=summary(mod))
names(a)
a[1]
models %>% summarise(R=summary(mod)[4])
models %>% summarise(R=summary(mod)[4]) %>% as.data.frame()
names(a)
models %>% summarise(R=summary(mod)[8]) %>% as.data.frame()
models %>% summarise(R=summary(mod)[8])
models %>% summarise(rsq = summary(mod)$r.squared)
models %>% summarise(R=summary(mod)[[8]])
models %>% summarise(R=summary(mod)[[1]])
models %>% summarise(R=summary(mod)[[4]])
x[,1:4] %>% rowwise() %>% summarise(sum(v1,v2))
aa=x[,1:4] %>% rowwise() %>% summarise(sum(v1,v2))
aa
max(aa)
models %>% do(data.frame(
sig=summary(.$mod)$r.squared,
coef(summary(.$mod))))
models %>% do((coef = coef(.$mod)))
models %>% do((coef = coef(.$mod)))
models %>% do(as.data.frame(coef = coef(.$mod)))
models %>% do(data.frame(coef = coef(.$mod)))
models %>% do(matrix(coef = coef(.$mod)))
models %>% do(data.frame(coef = coef(.$mod)))
models %>% do(data.frame(coef1 = coef(.$mod)[1]))
models %>% do(data.frame(coef1 = coef(.$mod)[1],coef2 = coef(.$mod)[2]))
n(1:10)
plot(iris[,3],iris[,4])
plot(iris[,3:4],type="n")
mylabel=rep(letters[1:3],each=50)
mycol=rep(c("red","blue","green"),each=50)
text(iris[,3:4],labels = mylabel,col=mycol)
legend(5,0.6,legend = unique(iris$Species),
col =c("red","blue","green"),pch="abc" )
plot(iris[,3], iris[,4], type="n")
my.label <- c(rep("a", 50), rep("b", 50), rep("c", 50))
text(iris[,3], iris[,4], my.label, cex=0.7,
col=ifelse(iris[,1] > median(iris[,1]), "red", "blue"))
read.table("C:\\Users\\tsr\\Desktop\\上課用檔案\\資料視覺化\\100.txt",sep=",")
spe[1:5,]
library(plyr)
library(dplyr)
library(magrittr)
spe %>% head
head(spe)
head(spe,n=5)
spe[1:5,]
env[1:5,]
spa[1:5,]
dim(spe)
dim(spe)
spe %>% dim
env %>% dim
spa %>% dim
spe %>% names
env %>% names
spa %>% names
spe[1:5,]
spa %>% summary()
env %>% summary()
spe %>% summary()
plot(spa[,2:3],type="l")
spa[,2:3]
plot(spa[,2],spa[,3],type="l")
plot(spa[,2],spa[,3])
plot(spa[,2:3],type="l")
text(x=spa$x,y=spa$y,labels = spa$X,cex = 1)
plot(spa[,2:3],type="l")
text(x=spa$x,y=spa$y,labels = spa$X,cex = 3)
spa
plot(spa[,2:3],type="l")
text(x=spa$x,y=spa$y,labels = spa$X,cex = 1)
boxplot(spe[,-1])
boxplot(env[,-1])
boxplot(env[,c(-1,-2,-3)])
std=function(x) (x-mean(x))/sd(x)
stdenv=apply(env[,-1],2,std ) %>% as.data.frame
boxplot(stdenv)
plot(spa[,2:3],cex=spe$TRU,main="TRU")
lines(spa[,2:3],col="blue",lwd=2)
plot(spa[,2:3],cex=spe$TRU,main="TRU")
lines(spa[,2:3],col="blue",lwd=2)
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU,pch=21,col="blue")
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU,pch=15,col="blue")
points(spa[,2:3],cex=spe$TRU,pch=21,col="blue")
plot(spa[,2:3],type="l",main="TRU")
points(spa[,2:3],cex=spe$TRU,pch=21,col="blue")
spesd=apply(spe[,-1],2,sd)
top4=spesd %>% sort(decreasing = T) %>% head(n=4)
boxplot(spe[,-1])
boxplot(iris[,1:4])
par(mfrow=c(1,1),pty="s")
pairs(env,panel = panel.smooth,diag.panel = panel.hist)
x$v1 %>% plot(.,type="l")
x %$% plot(v1[1:49],v1[2:50])
x$v1 %>% hist
x$v1 %>% qqnorm()
qqline(y=no)
x=iris
names(x)=paste("v",1:5,sep="")
x
x %>% head
x[,-5]
apply(x[,-5],2,sum)
sum(1:50)
apply(x[,-5],1,sum)
plot(spa[,2:3],cex=spe$TRU,main="TRU")
spesd=apply(spe[,-1],2,sd)
top4=spesd %>% sort(decreasing = T) %>% head(n=4)
top4
boxplot(iris[,1:4])
par(mfrow=c(1,1),pty="s")
pairs(env,panel = panel.smooth,diag.panel = panel.hist)
x$v1 %>% plot(.,type="l")
x %$% plot(v1[1:49],v1[2:50])
x$v1 %>% hist
x$v1 %>% qqnorm()
qqline(y=no)
spe %>% head()
spe > 0
spe[,-1]
spe[,-1] > 0
sit.pres <- apply(spe[,-1] > 0, 1, sum)
sit.pres
sort(sit.pres)
sit.pres <- apply(spe > 0, 1, sum)
sort(sit.pres)
x$v1
plot(iris[,3],iris[,4])
plot(iris[,3:4],type="n")
mylabel=rep(letters[1:3],each=50)
mycol=rep(c("red","blue","green"),each=50)
text(iris[,3:4],labels = mylabel,col=mycol)
legend(5,0.6,legend = unique(iris$Species),
col =c("red","blue","green"),pch="abc" )
iris$Species
legend(5,0.6,legend = unique(iris$Species),
col =c("red","blue","green"),pch=21 )
legend(5,0.6,legend = unique(iris$Species),
col =c("red","blue","green"),pch=15 )
text(iris[,3:4],labels = mylabel,col=mycol)
plot(iris[,3:4],type="n")
text(iris[,3:4],labels = mylabel,col=mycol)
letters
text(iris[,3:4],labels = rep(letters[1:3]),col=mycol)
plot(iris[,3:4],type="n")
text(iris[,3:4],labels = rep(letters[1:3]),col=mycol)
x$v1 %>% qqnorm()
qqline(y=no)
no=rnorm(100,mean = mean(x$v1),sd = sd(x$v1))
x$v1 %>% qqnorm()
qqline(y=no)
par(mai=rep(0.1,4),fig=c(90,10))
m=matrix(c(0,1,0,2,3,4,0,5,0),byrow = T,ncol=3)
layout(mat = m,widths = c(1,3,1),heights = c(1,3,1))
hist(iris[,1])
boxplot(iris[,1])
plot(iris[,c(1,3)],col=iris[,5])
hist(iris[,3])
boxplot(iris[,2],horizontal = T)
library(rpart)
library(maptree)
pp=rpart(Species~.,data=iris)
summary(pp)
names(pp)
draw.tree(pp)
plot(pp)
text(pp)
A=predict(pp,as.character(iris[1:61,1:4]),type="class")
table(iris[1:61,5],A)
library(e1071)
x=iris
r=sample(1:150,130)
train=x[r,]
test=x[-r,]
ss=svm(Species~.,data=train)
aa=predict(ss,test[,1:4])
table(test[,5],aa)
go=read.table("C:/Users/tsr/Desktop/額外檔案/新文字文件.txt",sep="",header=T)
names(go)
go=go[,-1]
a=rpart.control(minsplit = 2,cp=0,minbucket = 2)
mode=rpart(formula = PlayTennis~.,data=go,control = rpart.control(minsplit = 5,cp=0))
par(mai=rep(0.5,4))
plot(mode)
text(mode)
library(C50)
C5.0Control()
f=C5.0(PlayTennis~.,data=go)
summary(f)
plot(f)
library(C50)
f=C5.0(PlayTennis~.,data=go)
summary(f)
plot(f)
go
go=read.table("C:/Users/tsr/Desktop/額外檔案/新文字文件.txt",sep="",header=T)
names(go)
go=go[,-1]
go
go[,PlayTennis]
go[,'PlayTennis']
go[14,'Wind']="True"
go
library(C50)
C5.0Control()
f=C5.0(PlayTennis~.,data=go)
summary(f)
plot(f)
oo=go[1:2]
predict(f,oo)
oo
oo=go[1:2,]
predict(f,oo)
oo
?C5.0Control
?ceiling
plot(f)
library(magrittr)
library(plyr)
library(dplyr)
library(data.table)
library(lattice)
library(ggplot2)
library(readr)
pp=read_csv('C:/Users/tsr/Desktop/上課用檔案/資料視覺化/hourly_44201_2014.csv')
dim(pp)
pp %>% head
pp %>% head(2)
p1=pp %>% head(2)
print(p1)
print(p1,n = 2)
is(p1)
is(iris)
as.data.frame(p1)
C5.0(Method Type~.,data=p1)
C5.0(`Method Type`~.,data=p1)
library(C50)
C5.0(`Method Type`~.,data=p1)
p1$`Method Type` %>% is
p1$`Method Type` %<>% as.factor(p1$`Method Type`)
p1$`Method Type` = as.factor(p1$`Method Type`)
p1$`Method Type` %>% is
pp$`Method Type` = as.factor(pp$`Method Type`)
pp$`Method Type` %>% is
C5.0(`Method Type`~.,data=p1)
p1 %>% str
p1$`Date Local` %>% as.numeric()
p1$`Date Local` %<>% as.numeric()
p1$`Time Local` %<>% as.numeric()
p1$`Date of Last Change` %<>% as.numeric()
p1 %>% str
p1$`Date Local` %<>% as.numeric()
p1 %>% str
p1=pp %>% head(2)
as.data.frame(p1)
p1 %>% str
p1$`Date Local` %<>% as.numeric()
p1$`Date GMT` %<>% as.numeric()
p1$`Date of Last Change` %<>% as.numeric()
C5.0(`Method Type`~.,data=p1)
pp$`Method Type` = as.factor(pp$`Method Type`)
pp$`Method Type` %>% is
pp$`Date Local` %<>% as.numeric()
pp$`Date GMT` %<>% as.numeric()
pp$`Date of Last Change` %<>% as.numeric()
View(by_cyl)
C5.0(`Method Type`~.,data=pp)
v=sample(0:100,20,replace = T)
v
o=cut(v,breaks = c(0,40,50,70,100))
o
?cut
v
o
o=cut(v,breaks = c(-1,40,50,70,100))
o
o=cut(v,breaks = c(0,40,50,70,100),include.lowest = T)
o
library(foreign)
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav"
,to.data.frame=T)
vv
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav"
,to.data.frame=T)
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav",to.data.frame=T)
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav",header=T,to.data.frame=T)
vv
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav")
?read.spss
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\MAPdemo_2.sav",reencode="UTF-8")
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\bankloan需要量化.sav",reencode="UTF-8")
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\bankloan需要量化.sav",use.value.labels=T)
vv
vv=read.csv("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\bankloan需要量化.csv")
vv
head(vv)
vv=read.spss("C:\\Users\\TSR\\Desktop\\spss\\2_圖形建立與編輯\\bankloan需要量化.sav",use.value.labels=T)
mean
library("e1071", lib.loc="~/R/win-library/3.2")
library(e1071)
go=read.table("C:/Users/tsr/Desktop/額外檔案/新文字文件.txt",sep="",header=T)
?svm
?merge
?data.frame
p=list(c('a','b'),c('c','d'))
p
as.data.frame(p)
as.data.frame()
?as.data.frame()
rbind(p)
do.call(p,rbind)
sapply(p,rbind)
apply(p,rbind)
apply(p,1,rbind)
sapply(p,rbind)
as.data.frame(p,)
sapply(p,cbind)
as.data.frame(p)
list(1,2)
?"option"
lm(iris[,1]~Sepal.Width,data=iris)
lm(iris[,1]~'Sepal.Width',data=iris)
lm(iris[,1]~expression('Sepal.Width'),data=iris)
lm(expression('Sepal.Length'~ 'Sepal.Width'),data=iris)
lm(expression('Sepal.Length'~ 'Sepal.Width'),data=iris)
lm(expression('Sepal.Length~ Sepal.Width'),data=iris)
lm(as.formula('Sepal.Length~ Sepal.Width'),data=iris)
lm(as.formula('Sepal.Length~ Sepal.Width+I(Sepal.Width:Petal.Length)'),data=iris)
?lm
lm(as.formula('Sepal.Length~ Sepal.Width+Sepal.Width:Petal.Length'),data=iris)
aa=lm(as.formula('Sepal.Length~ Sepal.Width+Sepal.Width:Petal.Length'),data=iris)
summary(aa)
step(aa)
lm(as.formula('Sepal.Length~ Sepal.Width+Petal.Length+Sepal.Width:Petal.Length'),data=iris)
ss=lm(as.formula('Sepal.Length~ Sepal.Width+Petal.Length+Sepal.Width:Petal.Length'),data=iris)
summary(ss)
