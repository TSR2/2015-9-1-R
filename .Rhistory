oo
?date
summary(oo)
summary(oo,digits = 12)
month.abb
months.Date(oo)
months(oo)
months.POSIXt(oo)
?months
?month
??month
?chron
??chron
attributes(oo)
hist(iris[,1])
x=iris[,1]
sx=(x-mean(x))/sd(x)
ch=rchisq(100,1)
hist(ch)
library(magrittr)
ch %>% log %>% hist
ch %>% log %>% sqrt
ch %>% sqrt %>% hist
ch %>% sqrt %>% log %>% hist
?par
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1))
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1))
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1))
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(1,10),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),main="")
}
y=1:10
y %>% +1
y %>% -mean(y) %>% /sd(y)
y %>% -mean(y)
y %>% -mean(y) %>% /sd(y)
y %>% -mean(y) %>% "/"sd(y)
y %>% -mean(y) %>% *sd(y)
y %>% -mean(y) %>% divide_by(sd(y))
y %>% -mean(y) %>% divide_by(y %>% sd)
y %>% "*"3
y %>% '*'3
y %>% '*'(3)
y %>% *(3)
y %>% '/'(3)
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),ylim=c(0,10),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),ylim=c(0,20),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),ylim=c(0,30),main="")
}
par(mfrow=c(4,1),mai=c(0,0,0,0))
for (i in 1:4){
hist(iris[,i],xlim=c(0,8),ylim=c(0,40),main="")
}
boxplot(iris[,5]~iris[,1])
iris[,5] %>% is
iris[,5]
boxplot( as.character(iris[,5])~iris[,1])
boxplot(iris[,3]~iris[,1])
boxplot(iris[,2]~iris[,1])
boxplot(iris[,1]~iris[,5])
split(iris,f = iris[,5])
hh=split(iris,f = iris[,5])
summary(hh)
sapply(hh, hist)
hh
library(plyr)
laply(hh, hist)
library(plyr)
is(hh)
laply(hh, hist(.[,1]))
attributes(hh)
hh
is(hh)
hh[[1]]
hh[[2]]
hh[2]
x=matrix(c(rep(1,5),seq(0,0.8,0.2)))
qr(x)
x
x=matrix(c(rep(1,5),seq(0,0.8,0.2)),ncol=2)
qr(x)
q=qr(x)
qq=q$qr
qq
t(qq) %*% qq
lsfit(x,y)
x=seq(0,0.8,0.2)
y=c(1,4,6,2,5)
lsfit(x,y)
xx=lsfit(x,y)
fitted(x,0.2)
fitted(xx,0.2)
fitted(xx)
fitted(xx,3)
fitted(xx,x=2)
fitted(xx,x=0)
xx=lsfit(x,y)
xx
predict(xx,0)
predict(xx,0.2)
ls.diag(xx)
xx=lm(y~x)
xx
predict(xx,0.2)
predict(xx)
fitted(xx,x=0)
predict(xx,newdata = 2)
predict(xx,newdata = 2)
xx=lm(y~x)
predict(xx,newdata = 2)
predict(xx,newdata = c(0))
predict(xx,newdata = c(0,2))
predict(objects=xx,newdata = c(0,2))
predict(object=xx,newdata = c(0,2))
predict(object=xx,newdata = c(2))
?predict
predict.lm(object=xx,newdata = 2)
predict.lm(object=xx,newdata = 2,se.fit = T)
fitted(xx,2)
predict.lm(object=xx,newdata = 2,se.fit = T)
predict(object=xx,newdata = 2)
fitted(xx,2)
ls.diag(xx)
n=2
xx=lm(y~x)
predict(object=xx,newdata = n)
n=c(2,3)
xx=lm(y~x)
predict(object=xx,newdata = n)
n=as.data.frame(c(2,3))
xx=lm(y~x)
predict(object=xx,newdata = n)
n=as.data.frame(x=c(2,3))
n
predict(object=xx,newdata = n)
x=seq(0,0.8,0.2)
y=c(1,4,6,2,5)
x
y
xx=lm(y~x)
n=data.frame(x=c(2,3))
predict(object=xx,newdata = n)
library(foreign)
vv=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav")
vv
as.data.frame(vv)
?read.spss
vv=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav"
,to.data.frame=T)
vv
vv=0
vv=read.spss("C:\\Users\\tsr\\Desktop\\上課用檔案\\統計諮詢\\BW.sav"
,to.data.frame=T)
vv
density(iris[,1])
dd=density(iris[,1])
plot(dd)
par(mfrow=1)
par(mfrow=c(1,1))
plot(dd)
hist(iris[,1])
plot(dd)
hist(iris[,1])
plot(dd,add=T)
?plot
hist(iris[,1])
lines(dd)
hist(iris[,1],probability = T)
lines(dd)
dd
predict(dd,4)
dd(4)
dd
methods(dd)
class(dd)
methods(density
)
names(dd)
dd[6]
ee=ecdf(iris[,1])
ee
plot(ee)
plot(ee,verticals = T)
plot(ee,verticals = T,do.p=F)
qqplot(rnorm(0,1),rnrom(10,5))
qqplot(rnorm(0,1),rnorm(10,5))
qqplot(rnorm(100,0,1),rnorm(100,10,5))
qqline()
qqline(rnorm(100,0,1),rnorm(100,10,5))
qqplot(rnorm(100,0,1),rnorm(100,0,1))
qqline(rnorm(100,0,1),rnorm(100,0,1))
0
0
qqplot(rnorm(100,0,1),rnorm(100,0,1))
qqline(rnorm(100,0,1))
qqline(rnorm(100,0,5))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,0,5))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,0,1))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,0,1))
qqplot(rnorm(100,0,1),rnorm(100,10,1))
qqline(rnorm(100,10,1))
boxplot(iris[,1],iris[,2])
boxplot(iris[,1],iris[,2],notch=T)
boxplot(iris[,1],iris[,2],notch=T,col=1:2)
boxplot(iris[,1],iris[,2],iris[,3],notch=T)
boxplot(iris[,1]~iris[,5])
par(mfrow=c(1,1),mai=rep(0,4))
boxplot(iris[,1],iris[,2],iris[,3],notch=T)
boxplot(iris[,1]~iris[,5])
plot(1:10)
par(mfrow=c(1,1),mai=rep(1,4))
plot(1:10)
boxplot(iris[,1],iris[,2],iris[,3],notch=T)
boxplot(iris[,1]~iris[,5])
boxplot(iris[,1],iris[,2],iris[,3],notch=T)
boxplot(iris[,1],iris[,2],iris[,3],names=letters[1:3],notch=T)
??normtest
shapiro.test(1:10)
shapiro.test(1:100)
shapiro.test(1:100)
shapiro.test(1:10)
plot(iris[,1]~iris[,2])
coplot(iris[,1]~iris[,2] )
coplot(iris[,1]~iris[,2] |iris[,5])
library(magrittr)
library(plyr)
library(dplyr)
iris %>% group_by(5)
names(x)=paste("v",1:5,sep="")
x %>% group_by(v5) %>% plot(v1~v2)
x %>% group_by(v5) %>% plot(v1~v2,data=.)
x %>% group_by(v5)
x %>% head
x=iris
names(x)=paste("v",1:5,sep="")
x %>% group_by(v5) %>% plot(v1~v2,data=.)
x %>% group_by(v5) %>% do(m=plot(v1~v2,data=.))
m[1]
x %>% group_by(v5) %>% do(m=plot(v1~v2,data=.))
m
m=x %>% group_by(v5) %>% do(m=plot(v1~v2,data=.))
m
m[1]
m[[1]]
('v',1:5,sep="")
names(x)=paste('v',1:5,sep="")
cc=x %>% group_by(v5) %>% do(model=lm(v1~v2,data=.))
cc$model
cc
cc=x %>% group_by(v5) %>% do(histo=hist(.$v1))
cc
cc$histo
mo=x %>% group_by(v5) %>% do(m=plot(v1~v2,data=.))
mo$m
a=plot(1:10)
a
a=boxplot(1:10)
a
mo=x %>% group_by(v5) %>% do(m=boxplot(v1~v2,data=.))
mo$m
mo$m[[1]]
plot(mo$m[[1]])
mo$m[[1]]
boxplot(mo$m[[1]])
boxplot(mo$m[1])
x=iris
names(x)=paste("v",1:5,sep="")
cor.test(v1~v2)
cor.test(v1~v2,data=x)
cor.test(~v1+v2,data=x)
cor.test(~v1+v3,data=x)
??person cor
??person
?cor.test
x=iris[1:10,1:4]
max(x)
x=iris[1:10,1:4]
plot(1:10,y=c(min(x),max(x)),type="n")
for (i in 1:10){
lines(x[i,])
}
lines(x[1,])
lines(1:4,x[1,])
x=iris[1:10,1:4]
plot(1:4,y=c(min(x),max(x)),type="n")
lines(1:4,x[1,])
x=iris[1:10,1:4]
plot(1:4,y=c(min(x),max(x)),type="n")
plot(1:10,y=c(min(x),max(x)),type="n")
plot(c(1:4),y=c(min(x),max(x)),type="n")
x=iris[1:10,1:4]
plot(c(1,4),y=c(min(x),max(x)),type="n")
lines(1:4,x[1,])
x=iris[1:10,1:4]
plot(c(1,4),y=c(min(x),max(x)),type="n")
for (i in 1:10){
lines(x[i,])
}
x=iris[1:10,1:4]
plot(c(1,4),y=c(min(x),max(x)),type="n")
for (i in 1:10){
lines(x[i,],col=i)
}
x=iris[1:10,1:4]
plot(c(1,4),y=c(min(x),max(x)),type="n")
for (i in 1:10){
lines(1:4,x[i,],col=i)
}
x=iris[c(1:10,51:60,101:110),1:4]
plot(c(1,4),y=c(min(x),max(x)),type="n")
for (i in 1:30){
if (i<=10) {p=1}
else if (10<i & i<=20){p=2}
else p=3
lines(1:4,x[i,],col=p)
}
?select
apply(x,1,lines())
x=iris[c(1:10,51:60,101:110),1:4]
plot(c(1,4),y=c(min(x),max(x)),type="n")
apply(x,1,lines())
apply(x,1,lines(1:4,.))
library(magrittr)
library(plyr)
library(dplyr)
x$v5=1:30
x=iris[c(1:10,51:60,101:110),1:4]
x$v5=1:30
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% group_by(v5) %>% do(m=lines(1:4,.))
x=iris[c(1:10,51:60,101:110),1:4]
x$v5=1:30
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% group_by(v5) %>% do(m=lines(1:5,.))
x=iris[c(1:10,51:60,101:110),1:4]
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% group_indices %>% do(m=lines(1:4,.))
x %>% group_indices() %>% do(m=lines(1:4,.))
x %>% group_by() %>% do(m=lines(1:4,.))
x %>% group_by()
x %>% rowwise %>% do(m=lines(1:4,.))
x %>% rowwise %>% do(m=lines(1:4,.[1:4]))
x=iris[c(1:10,51:60,101:110),1:4]
x=iris[c(1:10,51:60,101:110),1:4]
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% rowwise %>% do(m=lines(1:4,.[1:4]))
pp=1:30
x=iris[c(1:10,51:60,101:110),1:4]
pp=1:30
x$p=ifelse(pp<=10,1,ifelse(pp>20,3,2))
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% rowwise %>% do(m=lines(1:4,.[1:4]),col=.[5])
x %>% rowwise %>% do(m=lines(1:4,.[1:4]),col=.[p])
x %>% rowwise %>% do(m=lines(1:4,.[1:4],col=.[p]))
x %>% rowwise %>% do(m=lines(1:4,.[1:4],col=.[5]))
x=iris[c(1:10,51:60,101:110),1:4]
pp=1:30
x$p=ifelse(pp<=10,1,ifelse(pp>20,3,2))
plot(c(1,4),y=c(min(x),max(x)),type="n")
x=iris[c(1:10,51:60,101:110),1:4]
pp=1:30
x$p=ifelse(pp<=10,1,ifelse(pp>20,3,2))
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% rowwise %>% do(m=lines(1:4,.[1:4],col=.[5]))
x %>% rowwise %>% do(m=lines(1:4,.[1:4],col=p))
x
x=iris[c(1:10,51:60,101:110),1:4]
pp=1:30
x$p=ifelse(pp<=10,1,ifelse(pp>20,3,2))
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% rowwise %>% do(m=lines(1:4,.[1:4],col=.[5]))
x %>% rowwise %>% do(m=lines(1:4,.[1:4]))
?lines
x %>% rowwise %>% do(m=lines(data=.,1:4,.[1:4],))
x %>% rowwise %>% do(m=lines(data=.,1:4,.[1:4],col=.[5]))
x=iris[c(1:10,51:60,101:110),1:4]
pp=1:30
x$p=ifelse(pp<=10,1,ifelse(pp>20,3,2))
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% rowwise %>% do(m=lines(data=.,1:4,.[1:4],col=.[5]))
x %>% rowwise %>% do(m=lines(data=.,1:4,.[1:4]))
x %>% rowwise %>% do(m=lines(1:4,.[1:4]))
x=iris[c(1:10,51:60,101:110),1:4]
pp=1:30
x$p=ifelse(pp<=10,1,ifelse(pp>20,3,2))
plot(c(1,4),y=c(min(x),max(x)),type="n")
x %>% rowwise %>% do(m=lines(1:4,.[1:4]))
apply(x,1,lines(),x=1:4)
x=iris[c(1:10,51:60,101:110),1:4]
x$p=ifelse(pp<=10,1,ifelse(pp>20,3,2))
plot(c(1,4),y=c(min(x),max(x)),type="n")
apply(x,1,lines(),x=1:4)
apply(X = x,MARGIN = 1,FUN = lines(),x=1:4)
apply(X = x,MARGIN = 1,FUN = lines(x=1:4))
stars(x)
x=iris[c(1:10,51:60,101:110),1:4]
stars(x)
install.packages("rjava")
install.packages("rJava")
install.packages("devtools")
library(devtools)
library(devtool)
library(devtools)
sq=function(y,f=expression(x^2-y),tol=10^-10){
x=1;s=100
fp=D(f,"x")
while (all(s>tol)){
x=x-eval(f)/eval(fp)
s=eval(f)
}
x
}
sq(c(3,4))
sq=function(y,f=expression(x^2-y),tol=10^-10){
x=1;s=100
fp=D(f,"x")
while (all(abs(s)>tol)){
x=x-eval(f)/eval(fp)
s=eval(f)
}
x
}
sq(c(3,4))
sq(c(3,11))
format(3.11111111111111111111111111111111)
format(3.11111111111111111111111111111111,digits = 10)
format(3.11111111111111111111111111111111,digits = 20)
ff=sq(c(3,11))
format(ff,digits = 20)
gg=sqrt(c(3,11))
format(gg,digits = 20)
options(digits = 10)
sq(c(3,11))
library(rpart)
rpart(Species~.,data=iris)
pp=rpart(Species~.,data=iris)
plot(pp)
maptree(pp)
library(maptree)
maptree(pp)
??maptree
?maptree
??tree
draw.tree(pp)
library(e1071)
svm(Species~.,data=iris)
ss=svm(Species~.,data=iris)
x=iris
x=iris
r=sample(1:150,130)
train=x[r,]
test=x[-r,]
ss=svm(Species~.,data=train)
predict(ss,test)
predict(ss,test[,1:4])
aa=predict(ss,test[,1:4])
table(test[,5],aa)
r=sample(1:150,130)
train=x[r,]
test=x[-r,]
ss=svm(Species~.,data=train)
aa=predict(ss,test[,1:4])
table(test[,5],aa)
r=sample(1:150,130)
train=x[r,]
test=x[-r,]
ss=svm(Species~.,data=train)
aa=predict(ss,test[,1:4])
table(test[,5],aa)
r=sample(1:150,130)
train=x[r,]
test=x[-r,]
ss=svm(Species~.,data=train)
aa=predict(ss,test[,1:4])
table(test[,5],aa)
r=sample(1:150,130)
train=x[r,]
test=x[-r,]
ss=svm(Species~.,data=train)
aa=predict(ss,test[,1:4])
table(test[,5],aa)
install.packages("neuralnet")
library(nenralnet)
library(neuralnet)
