is(x)
library(HistDAWass)
a1=seq(60,210,15)
a2=c(0.00714,0.04286,0.24179,0.72488,1.2747,1.67364,1.975,0.885,0.135,0.04)
a2=a2/sum(a2)
mydist<-distributionH(x=a1, p=pp)
meanH(mydist)
stdH(mydist)
hcalEX(data2)
hcalvar(data2)
sqrt(hcalvar(data2))
n=p=1
Bij=8
mu <- numeric(p)
s2 <- numeric(p)
for(j in 1: p){
for(i in 1:n){
## mean
px <- sum(a2*(a1[1:Bij]+
a1[2:(Bij+1)]))
mu[j] <- mu[j] + px
## var
px <- sum(a2*(a1[1:Bij]^2+
a1[2:(Bij+1)]^2+
a1[1:Bij]*
a1[2:(Bij+1)]))
s2[j] <- s2[j] + px
}
mu[j] <- mu[j]/(2*n)
s2[j] <- s2[j]/(3*n)-mu[j]^2
}
list(mu=mu, s2=s2)
n=p=1
Bij=8
mu <- numeric(p)
for(j in 1: p){
for(i in 1:n){
px <- sum(a2*(a1[1:Bij]+
a1[2:(Bij+1)]))
mu[j] <- mu[j] + px
}
mu[j] <- mu[j]/(2*n)
}
mu
n=p=1
Bij=8
mu <- numeric(p)
for(j in 1: p){
for(i in 1:n){
px <- sum(a2*(a1[1:Bij]+
a1[2:(Bij+1)]))
mu[j] <- mu[j] + px
}
mu[j] <- mu[j]/(2*n)
}
mu
a1=seq(60,210,15)
a2=c(0.00714,0.04286,0.24179,0.72488,1.2747,1.67364,1.975,0.885,0.135,0.04)
a2=a2/sum(a2)
mydist<-distributionH(x=a1, p=pp)
meanH(mydist)
stdH(mydist)
hcalEX(data2)
hcalvar(data2)
a1=seq(60,210,15)
a2=c(0.00714,0.04286,0.24179,0.72488,1.2747,1.67364,1.975,0.885,0.135,0.04)
a2=a2/sum(a2)
a=list(breaks=a1,count=a2)
class(a)="histogram"
a
data2=list()
data2[[1]]=list(a)
data2
hcalEX(data2)
hcalvar(data2)
mydist<-distributionH(x=a1, p=pp)
meanH(mydist)
stdH(mydist)
pp=c(0,cumsum(a2))
mydist<-distributionH(x=a1, p=pp)
meanH(mydist)
stdH(mydist)
hcalEX(data2)
hcalvar(data2)
sqrt(hcalvar(data2))
n=p=1
Bij=8
mu <- numeric(p)
s2 <- numeric(p)
for(j in 1: p){
for(i in 1:n){
## mean
px <- sum(a2*(a1[1:Bij]+
a1[2:(Bij+1)]))
mu[j] <- mu[j] + px
## var
px <- sum(a2*(a1[1:Bij]^2+
a1[2:(Bij+1)]^2+
a1[1:Bij]*
a1[2:(Bij+1)]))
s2[j] <- s2[j] + px
}
mu[j] <- mu[j]/(2*n)
s2[j] <- s2[j]/(3*n)-mu[j]^2
}
list(mu=mu, s2=s2)
meanH(mydist)
stdH(mydist)
hcalEX(data2)
hcalvar(data2)
n=p=1
Bij=10
mu <- numeric(p)
s2 <- numeric(p)
for(j in 1: p){
for(i in 1:n){
## mean
px <- sum(a2*(a1[1:Bij]+
a1[2:(Bij+1)]))
mu[j] <- mu[j] + px
## var
px <- sum(a2*(a1[1:Bij]^2+
a1[2:(Bij+1)]^2+
a1[1:Bij]*
a1[2:(Bij+1)]))
s2[j] <- s2[j] + px
}
mu[j] <- mu[j]/(2*n)
s2[j] <- s2[j]/(3*n)-mu[j]^2
}
list(mu=mu, s2=s2)
vv=matrix(,ncol=2,nrow=2)
vv=matrix(0,ncol=2,nrow=2)
vv=matrix(0,ncol=2,nrow=2)
for (i in 1:2){
for (j in 1:2){
vv[i,j]=hist(iris[,1])
}
}
library(HistDAWass)
meanH(hist(iris[,1]))
meanH(mydist)
install.packages("gregmisc")
?combn
combn(letters[1:4], 2)
combn(c(1,1,1,1,2,2,2,3,3,4), 3, tabulate, nbins = 4)
vv=function(y){
h(y)
}
h=function(p){
p^2
}
vv(10)
vv=function(y){
h(y)
}
h=function(p){
showframe(0)
p^2
}
vv(10)
install.packages("edtdbg")
library(edtdbg)
?edtbdg
tt=function(x){
if (x==1) return(x)
x=x-1
p=x*tt(x)
}
tt(6)
g=tt(6)
g
debug(tt)
g=tt(6)
x
x
x
x
x
x
x
x
p
return(x)
v
debug(tt)
g=tt(6)
nn
x
?debug
tt=function(x){
if (x==1) return(x)
browser(x<=3)
x=x-1
p=x*tt(x)
}
g=tt(6)
x
q
qq
undebug(tt)
debug(tt)
undebug(tt)
tt=function(x){
if (x==1) return(x)
browser(x<=3)
x=x-1
p=x*tt(x)
}
g=tt(6)
x
x
x
View(hcalvar)
x
x
x=c()
x
tt=function(x){
if (x==1) return(x)
browser(x<=3)
x=x-1
p=x*tt(x)
}
g=tt(6)
x
tt=function(x){
if (x==1) return(x)
browser(x<3)
x=x-1
p=x*tt(x)
}
g=tt(6)
x
x
tt=function(x){
if (x==1) return(x)
if (x<3) browser()
x=x-1
p=x*tt(x)
}
x
g=tt(6)
x
x
tt=function(x){
if (x==1) return(x)
if (x<=3) browser()
x=x-1
p=x*tt(x)
}
g=tt(6)
x
g=tt(6)
kk=expand.grid(x=2:4,y=4:9)
kk
is(kk)
meanH(hist(iris[,1]))
??combin
a1=c(0,3.5,7.0,10.5,14,17.5,21)
a2=c(3.094,6.5874,6.996,4.1761,1.5798,0.5667)
b1=c(0,4,7,10,13,16,19)
b2=c(4.0833,8.2672,5.1251,3.5680,1.6564,0.3)
c1=c(0,1,2,3,4,5)
c2=c(5.25,9.8,4.2167,2.9,0.8333)
a2=a2/sum(a2)
b2=b2/sum(b2)
c2=c2/sum(c2)
data1=list()
aa=bb=cc=list()
a=list(breaks=a1,count=a2)
class(a)="histogram"
b=list(breaks=b1,count=b2)
class(b)="histogram"
c=list(breaks=c1,count=c2)
class(c)="histogram"
aa[[1]]=a
bb[[1]]=b
cc[[1]]=c
data1[[1]]=aa
data1[[2]]=bb
data1[[3]]=cc
data1
hcalEX(data1)
hcalvar(data1)
hcalcov(data1)
library(plyr)
hcalcov(data1)
hcalcov=function(x){
p=length(x)
cov=matrix(0,ncol=p,nrow=p)
for (i in 1:p){
m1=laply(x[[i]],hcalEX)
for (j in 1:p){
m2=laply(x[[j]],hcalEX)
cov[i,j]=sum(m1*m2)/(4*p)-sum(m1)*sum(m2)/(4*p^2)
}
}
list(cov,eigen(cov))
}
hcalcov(data1)
data1
hcalEX=function(var){
p=length(var)
calEX=function(x){
b=length(x$count)
a=x$count*(x$breaks[2:(b+1)]+x$breaks[1:b])
sum(a)
}
n=length(var[[1]])
mu=c()
for (j in 1:p){
m=sum(sapply(var[[j]],calEX))/(2*n)
mu=c(mu,m)
}
mu
}
hcalcov(data1)
hcalcov=function(x){
calEX=function(x){
b=length(x$count)
a=x$count*(x$breaks[2:(b+1)]+x$breaks[1:b])
sum(a)
}
p=length(x)
cov=matrix(0,ncol=p,nrow=p)
for (i in 1:p){
m1=laply(x[[i]],calEX)
for (j in 1:p){
m2=laply(x[[j]],calEX)
cov[i,j]=sum(m1*m2)/(4*p)-sum(m1)*sum(m2)/(4*p^2)
}
}
list(cov,eigen(cov))
}
hcalcov(data1)
data1
bij=numeric(3)
for (j in 1:3){
bij[j]=length(data1[[j]][[i]]$count)
}
bij
expand.grid(1:bij[1],1:bij[2],1:bij[3])
big=data.frame()
data1
bij=numeric(3)
for (j in 1:3){
bij[j]=length(data1[[j]][[1]]$count)
}
bij
expand.grid(1:bij[1],1:bij[2],1:bij[3])
big=data.frame()
exp=expand.grid(1:bij[1],1:bij[2],1:bij[3])
for (j in 1:3){
big[j*2-1]=data1[[j]][[1]]$breaks[exp[j]]
big[j*2]=data1[[j]][[1]]$breaks[exp[j]+1]
}
for (j in 1:3){
big[j*2-1]=data1[[j]][[1]]$breaks[[exp[j]]]
big[j*2]=data1[[j]][[1]]$breaks[[exp[j]+1]]
}
c(1:10)[exp[1]]
exp[1]
is(exp[1])
exp[[1]]
for (j in 1:3){
big[j*2-1]=data1[[j]][[1]]$breaks[[exp[,j]]]
big[j*2]=data1[[j]][[1]]$breaks[[exp[,j]+1]]
}
big
c(1;10)[exp[[1]]]
x
x=1:10
x[c(2,2,2,2,2,2,2,2,2,2,2,)]
x[c(2,2,2,2,2,2,2,2,2,2,2)]
x[rep(1,100)]
exp[,1]
data1
for (j in 1:3){
big[j*2-1]=data1[[j]][[1]]$breaks[[exp[,j]]]
big[j*2]=data1[[j]][[1]]$breaks[[exp[,j]+1]]
}
big
data1[[j]][[1]]$breaks[[exp[,1]]]
data1[[1]][[1]]$breaks[[exp[,1]]]
data1[[1]][[1]]$breaks[[1]]
data1[[1]][[1]]$breaks[[1:6]]
data1[[1]][[1]]$breaks[[1:2]]
for (j in 1:3){
x=data1[[j]][[1]]$breaks
big[j*2-1]=x[exp[,j]]
big[j*2]=x[exp[,j]+1]
}
x=data1[[j]][[1]]$breaks
is(x)
x
x[rep(1,20)]
x[exp[,1]]
x[exp[,1]+1]
for (j in 1:3){
x=data1[[j]][[1]]$breaks
big[,j*2-1]=x[exp[,j]]
big[,j*2]=x[exp[,j]+1]
}
big
big=data.frame(ncol=6)
big=data.frame()
big=matrix()
for (j in 1:3){
x=data1[[j]][[1]]$breaks
big[,j*2-1]=x[exp[,j]]
big[,j*2]=x[exp[,j]+1]
}
big=matrix(0,ncol=6,nrow=dim(exp)[1])
for (j in 1:3){
x=data1[[j]][[1]]$breaks
big[,j*2-1]=x[exp[,j]]
big[,j*2]=x[exp[,j]+1]
}
big
minI=matrix(0,ncol=3,nrow=dim(exp)[1])
maxI=matrix(0,ncol=3,nrow=dim(exp)[1])
for (j in 1:3){
x=data1[[j]][[1]]$breaks
minI[,j]=x[exp[,j]]
maxI[,j]=x[exp[,j]+1]
}
minI
maxI
minI
hcalcov(data1)
ver=hcalcov(data1)[[2]]$vectors
ver
minI %*% ver[1,]
maxI %*% ver[1,]
for (i in 1:3){
if (ver[1,i]<0) {
p=minI[,i]
minI[,i]=maxI[,i]
maxI[,i]=p
}
}
linmin=minI %*% ver[1,]
linmax=maxI %*% ver[1,]
m=data.frame()
m[,1]=maxI[,1]
m=cbind(m,maxI[,1])
?data.frame()
m$var1max=maxI[,1]
m
m=rep(0,180)
m=cbind(m,linmin[,1])
m
m=cbind(m,linmin[,1],linmax[,1])
m
linmin=minI %*% ver[1,]
linmax=maxI %*% ver[1,]
m=rep(0,180)
for (i in 1:3){
m=cbind(m,linmin[,i],linmax[,i])
colnames(m)[(i*2):(i*2+1)]=paste("var",i,c("min","max"))
}
m
head(m)
for (i in 1:3){
m=cbind(m,linmin[,i],linmax[,i])
colnames(m)[(i*2):(i*2+1)]=paste("var",i,c("min","max"))
}
head(m)
linmin=minI %*% ver[1,]
linmax=maxI %*% ver[1,]
m=rep(0,180)
for (i in 1:3){
m=cbind(m,linmin[,i],linmax[,i])
colnames(m)[(i*2):(i*2+1)]=paste("var",i,c("min","max"),sep="")
}
head(m)
for (i in 1:3){
m=cbind(m,linmin[,i],linmax[,i])
colnames(m)[(i*2):(i*2+1)]=paste("var",i,c("min","max"),sep="")
}
head(m)
m=rep(0,180)
for (i in 1:3){
m=cbind(m,linmin[,i])
m=cbind(m,linmax[,i])
colnames(m)[(i*2):(i*2+1)]=paste("var",i,c("min","max"),sep="")
}
head(m)
m=rep(0,180)
for (i in 1:3){
m=cbind(m,linmin[,i])
m=cbind(m,linmax[,i])
#colnames(m)[(i*2):(i*2+1)]=paste("var",i,c("min","max"),sep="")
}
head(m)
linmax[,2]
linmin
linmax
linmin=minI %*% ver[1,]
linmax=maxI %*% ver[1,]
m=cbind(linmin[,1],linmax[,1])
m
library(dplyr)
is(m)
p=as.data.frame(m)
p
names(p)=c("min","max")
library(magrittr)
p %>% summarise(hmin=min(Imin),hmax=max(Imax))
names(p)=c("Imin","Imax")
p %>% summarise(hmin=min(Imin),hmax=max(Imax))
