np=as.data.frame(m)
names(np)=c("Imin","Imax")
#找出合併後直方圖的range
his=np %>% summarise(hmin=min(Imin),hmax=max(Imax))
Bi=max(bij)
his=seq(from=his$hmin,to=his$hmax,length.out=Bi+1)
#以下先進行對一個區間重疊的計算
pp=c()
for (b in 1:Bi){
testm=cbind(linmin,linmax,his[b],his[b+1])
#########完全包含的index  有時候會是空的，沒有任何全包含
allcoverindex=(testm[,2]<=testm[,4] & testm[,1]>=testm[,3]) |
(testm[,2]>=testm[,4] & testm[,1]<=testm[,3])     #########篩選出完全包含的
allcover=testm[allcoverindex,]
if (is(allcover)[2]=="vector"){
allcover=t(as.matrix(allcover))
}
#計算完全包含的p值
ratio1=min(abs(allcover[,4]-allcover[,3]),abs(allcover[,2]-allcover[,1]))/abs(allcover[,2]-allcover[,1])
p1=sum(ratio1*pro[allcoverindex])
################判斷有重疊的index
coverindex=(testm[,2]>testm[,3] & testm[,1]<testm[,4]) |
(testm[,2]<testm[,3] & testm[,1]>testm[,4])
#######找出有相交，但不是完全包含的index
#######找出有相交，但是不是完全包含的
takem=testm[coverindex,]
if (is(takem)[2]=="vector"){
takem=t(as.matrix(takem))
}
####算出有take重疊的長度
gg=cbind(takem[,2]-takem[,3],takem[,4]-takem[,1])
takelen=apply(abs(gg),1,FUN = min)
ratio2=takelen/abs(takem[,2]-takem[,1])
p2=sum(ratio2*pro[coverindex])
pp[b]=p1+p2
}
ppp[[i]]=pp/sum(pp)
hhh[[i]]=his
}
list(hhh,ppp)
}
}
###############################################
transgroup=function(x){
xx=x %>% as.factor() %>% as.numeric()
as=unique(iris[,1])
as[1]==5.1
}
############################################
sir=function(x,index){
dn=dim(x)[1]
dp=dim(x)[2]
x1=x[,index] %>% as.factor() %>% as.numeric()
n=max(x1)
x2=x[,-index] %>% colMeans()
x2=matrix(rep(x2,dn),nrow=dn,byrow = T)
pp=matrix(0,ncol=dp-1,nrow=dp-1)
for (i in 1:n){
xx=x %>% filter(.[,index]==levels(x[,index])[i]) %>% select(-index)
x3=as.matrix(xx-x2)
a=t(x3) %*% x3
pp=pp+a
}
eigen(pp)
}
###################################common desity estmate
des_e=function(x,b=10){
ymin=min(x[,1])
ymax=max(x[,1])
xmin=min(x[,2])
xmax=max(x[,2])
yrange=seq(ymin,ymax,length.out = b+1)
xrange=seq(xmin,xmax,length.out = b+1)
qq1=matrix(0,nrow=b,ncol=b)
for (j in 1:b){
for(i in 1:b){
qq1[i,j]=sum(x[,1]>=yrange[j] & x[,1]<=yrange[j+1] & x[,2]>=xrange[i] & x[,2]<=xrange[i+1])
}
}
qq1
}
###################################一般資料轉換成直方圖資料
point_to_h=function(x,group){
d=dim(x)
n=group %>% unique() %>% length()
uni=group %>% unique
h=list()
a=list()
for ( j in 1:d[2]){
for(i in 1:length(uni)){
ff=hist(x[group==uni[i],j],plot=F)
#ff$counts=ff$counts/sum(ff$counts)
a[[i]]=ff
}
h[[j]]=a
}
h
}
#############################################取出質方圖資料的主成分畫圖
plotcom=function(x,...){
n=length(x[[1]])
p=length(x)
for (j in 1:2){
if(j==1) {
par(mfcol=c(n,2),mai=c(0,0,0,0))
kk=hist(iris[,1],plot=F)
}
dda=createh(data1=x,com=j,...)
tt=laply(dda[[1]],max)
bma=max(tt)
tt=laply(dda[[1]],min)
bmi=min(tt)
tt=laply(dda[[2]],max)
pma=max(tt)
tt=laply(dda[[2]],min)
pmi=min(tt)
for (i in 1:n){
kk$breaks=dda[[1]][[i]]
kk$counts=dda[[2]][[i]]
plot(kk,xlim=c(bmi-2,bma+1),ylim=c(0,pma),main="",col="blue",ylab = "")
}
}
}
#####################
color.Palette <- function(low = "black",
high = c("green", "red"),
mid="black",
k =50)
{
low <- col2rgb(low)/255
high <- col2rgb(high)/255
if(is.null(mid)){
r <- seq(low[1], high[1], len = k)
g <- seq(low[2], high[2], len = k)
b <- seq(low[3], high[3], len = k)
}
if(!is.null(mid)){
k2 <- round(k/2)
mid <- col2rgb(mid)/255
r <- c(seq(low[1], mid[1], len = k2),
seq(mid[1], high[1], len = k2))
g <- c(seq(low[2], mid[2], len = k2),
seq(mid[2], high[2], len = k2))
b <- c(seq(low[3], mid[3], len = k2),
seq(mid[3], high[3], len = k2))
}
rgb(r, g, b)
}
###################################################plot joint histo
#yr=seq(-4,4,by=.1)
#xr=seq(4,12,by=.1)
plotjointh=function(x,b,...){
dda1=createh(data1=x,com=1,...)
dda2=createh(data1=x,com=2,...)
xmax=dda1[[1]] %>% unlist %>% max
xmin=dda1[[1]] %>% unlist %>% min
ymax=dda2[[1]] %>% unlist %>% max
ymin=dda2[[1]] %>% unlist %>% min
xr=seq(xmin,xmax,length.out = b)
yr=seq(ymin,ymax,length.out = b)
lastjoint=matrix(0,ncol=(length(yr)-1),nrow=(length(xr)-1))
part=list()
for (s in 1:length(dda1[[1]])){
b1=list(breaks=dda1[[1]][[s]],counts=dda1[[2]][[s]])
b2=list(breaks=dda2[[1]][[s]],counts=dda2[[2]][[s]])
joint=matrix(0,ncol=(length(yr)-1),nrow=(length(xr)-1))
for (j in 1:(length(yr)-1)){
for (i in 1:(length(xr)-1)){
gg=0
allrange=(xr[i+1]-xr[i])*(yr[j+1]-yr[j])
for(p in 1:length(b1$counts)){
for(k in 1:length(b2$counts)){
aa=min(xr[i+1]-b1$breaks[p],b1$breaks[p+1]-xr[i])
if (aa<0) aa=0
bb=min(yr[j+1]-b2$breaks[k],b2$breaks[k+1]-yr[j])
if (bb<0) bb=0
if (b1$breaks[p]>=xr[i] & b1$breaks[p+1]<=xr[i+1]) aa=b1$breaks[p+1]-b1$breaks[p]
if (b1$breaks[p]<=xr[i] & b1$breaks[p+1]>=xr[i+1]) aa=xr[i+1]-xr[i]
if (b2$breaks[k]>=yr[j] & b2$breaks[k+1]<=yr[j+1]) bb=b2$breaks[k+1]-b2$breaks[k]
if (b2$breaks[k]<=yr[j] & b2$breaks[k+1]>=yr[j+1]) bb=yr[j+1]-yr[j]
coverratio=(aa*bb)/allrange
gg=gg+coverratio*b1$counts[p]*b2$counts[k]
}
}
joint[i,j]=gg
}
}
#part[[s]]=joint
mcol=c(rainbow(10, start=0, end=0.5),rainbow(190, start=0.5, end=0.7))
image(joint,col=mcol)
lastjoint=lastjoint+joint
}
mcol=c(rainbow(10, start=0, end=0.5),rainbow(190, start=0.5, end=0.7))
image(lastjoint,col=mcol)
}
source('paperfunction.R')
a1=iris
test3=iris[,1:4]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=test3 %>% as.matrix()
t1=t(p) %*% p
eig=eigen(t1)
plot(p %*% eig$vectors[,2],p %*% eig$vectors[,1],col=a1$Species)
p=test3 %>% as.matrix()
t1=t(p) %*% p
eig=eigen(t1)
dr1=p %*% eig$vectors[,1]
dr2=p %*% eig$vectors[,2]
test2=cbind(dr1,dr2)
image(des_e(test2,b=10))
index=1:3
plotcom(test4,index=index)
plotcom(test4,index=index,method='1')
index=1:length(test4[[1]])
index
hsir=function(x,index=1){
#x=total
#index=list(c(1:10),c(11:20),c(21:30))
if(index==1) index=1:length(x[[1]])
n=index %>% unique() %>% length()
uni=index %>% unique
dp=length(x)
dn=length(x[[1]])
allmean=hcalEX(x)
pp=matrix(0,ncol=dp,nrow=dp)
for (k in 1:n){
xx=llply(x,'[',index==uni[k])
p=length(xx)
a=hcalEX(xx)-allmean
parcov=a %*% t(a)
pp=pp+parcov
}
list(pp,eigen(pp))
}
plotcom(test4)
plotjointh(test4,10,B=10)
par(mfrow=c(2,2),mai=rep(.3,4))
plotjointh(test4,10,B=10)
test1=kmeans(test3,centers = 3)
tt1=test1$cluster
tt1
test4=point_to_h(p,group=tt1)
plotjointh(test4,10,B=10)
test4=point_to_h(p,group=iris[,5])
index=1:length(test4[[1]])
plotcom(test4)
a1=read.table('Skin_NonSkin.txt')
a1 %>% head
a1=read.table('Skin_NonSkin.txt')
a1 %>% head
test3=a1[,1:3]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=scale(test3) %>% as.matrix()
test4=point_to_h(p,group=a1$V4)
plotjointh(test4,10,B=10)
par(mfrow=c(2,2),mai=rep(.3,4))
plotjointh(test4,10,B=10)
par(mfrow=c(2,2),mai=rep(.3,4))
test4=point_to_h(p,group=a1$V5)
a1=read.table('data_banknote_authentication.txt',sep=',')
a1 %>% head
test3=a1[,1:4]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=scale(test3) %>% as.matrix()
par(mfrow=c(2,2),mai=rep(.3,4))
test4=point_to_h(p,group=a1$V5)
plotjointh(test4,10,B=10)
source('paperfunction.R')
a1=read.table('wine.data',sep=',')
a1 %>% head
test3=a1[,11:14]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=scale(test3) %>% as.matrix()
par(mfrow=c(2,2),mai=rep(.3,4))
test4=point_to_h(p,group=a1$V1)
plotjointh(test4,10,B=10)
plotjointh(test4,30,B=10)
gr=rep(1:3,each=10)
plotcom(test4,index=gr)
gr
total[[1]] %>% length()
plotcom(test4,index=gr)
hsir=function(x,index=1){
#x=total
#index=list(c(1:10),c(11:20),c(21:30))
if(length(index)==1) index=1:length(x[[1]])
n=index %>% unique() %>% length()
uni=index %>% unique
dp=length(x)
dn=length(x[[1]])
allmean=hcalEX(x)
pp=matrix(0,ncol=dp,nrow=dp)
for (k in 1:n){
xx=llply(x,'[',index==uni[k])
p=length(xx)
a=hcalEX(xx)-allmean
parcov=a %*% t(a)
pp=pp+parcov
}
list(pp,eigen(pp))
}
plotcom(test4,index=gr)
plotjointh(test4,10,B=10,index=gr)
par(mfrow=c(2,2),mai=rep(.3,4))
plotjointh(test4,10,B=10,index=gr)
test4=total
plotcom(test4,index=gr)
plotjointh(test4,10,B=10,index=gr)
a=list()
total=list()
for (j in 1:4){
for (i in 1:30){
range1=switch (((i-1) %/% 10)+1,1:50,51:100,101:150)
his <- hist(iris[sample(x=range1,20),j])
his$counts <- his$counts/sum(his$counts)
a[[i]] <- his
}
total[[j]] <- a
}
gr=rep(1:3,each=10)
test4=total
plotcom(test4,index=gr)
plotjointh(test4,10,B=10,index=gr)
par(mfrow=c(2,2),mai=rep(.3,4))
a=list()
total=list()
for (j in 1:4){
for (i in 1:30){
range1=switch (((i-1) %/% 10)+1,1:50,51:100,101:150)
his <- hist(iris[sample(x=range1,20),j])
his$counts <- his$counts/sum(his$counts)
a[[i]] <- his
}
total[[j]] <- a
}
gr=rep(1:3,each=10)
test4=total
plotcom(test4,index=gr)
plotjointh(test4,10,B=10,index=gr)
plotjointh=function(x,b,...){
dda1=createh(data1=x,com=1,...)
dda2=createh(data1=x,com=2,...)
xmax=dda1[[1]] %>% unlist %>% max
xmin=dda1[[1]] %>% unlist %>% min
ymax=dda2[[1]] %>% unlist %>% max
ymin=dda2[[1]] %>% unlist %>% min
xr=seq(xmin,xmax,length.out = b)
yr=seq(ymin,ymax,length.out = b)
lastjoint=matrix(0,ncol=(length(yr)-1),nrow=(length(xr)-1))
par(mfrow=c(round(length(dda1[[1]])/2),2))
part=list()
for (s in 1:length(dda1[[1]])){
b1=list(breaks=dda1[[1]][[s]],counts=dda1[[2]][[s]])
b2=list(breaks=dda2[[1]][[s]],counts=dda2[[2]][[s]])
joint=matrix(0,ncol=(length(yr)-1),nrow=(length(xr)-1))
for (j in 1:(length(yr)-1)){
for (i in 1:(length(xr)-1)){
gg=0
allrange=(xr[i+1]-xr[i])*(yr[j+1]-yr[j])
for(p in 1:length(b1$counts)){
for(k in 1:length(b2$counts)){
aa=min(xr[i+1]-b1$breaks[p],b1$breaks[p+1]-xr[i])
if (aa<0) aa=0
bb=min(yr[j+1]-b2$breaks[k],b2$breaks[k+1]-yr[j])
if (bb<0) bb=0
if (b1$breaks[p]>=xr[i] & b1$breaks[p+1]<=xr[i+1]) aa=b1$breaks[p+1]-b1$breaks[p]
if (b1$breaks[p]<=xr[i] & b1$breaks[p+1]>=xr[i+1]) aa=xr[i+1]-xr[i]
if (b2$breaks[k]>=yr[j] & b2$breaks[k+1]<=yr[j+1]) bb=b2$breaks[k+1]-b2$breaks[k]
if (b2$breaks[k]<=yr[j] & b2$breaks[k+1]>=yr[j+1]) bb=yr[j+1]-yr[j]
coverratio=(aa*bb)/allrange
gg=gg+coverratio*b1$counts[p]*b2$counts[k]
}
}
joint[i,j]=gg
}
}
#part[[s]]=joint
mcol=c(rainbow(10, start=0, end=0.5),rainbow(190, start=0.5, end=0.7))
image(joint,col=mcol)
lastjoint=lastjoint+joint
}
mcol=c(rainbow(10, start=0, end=0.5),rainbow(190, start=0.5, end=0.7))
image(lastjoint,col=mcol)
}
source('paperfunction.R')
a1=iris
test3=iris[,1:4]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=test3 %>% as.matrix()
test4=point_to_h(p,group=iris[,5])
plotcom(test4)
plotjointh(test4,10,B=10,index=gr)
a1=read.table('data_banknote_authentication.txt',sep=',')
a1 %>% head
test3=a1[,1:4]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=scale(test3) %>% as.matrix()
test4=point_to_h(p,group=a1$V5)
plotjointh(test4,10,B=10)
a1=read.table('transfusion.data',sep=',',skip = 2)
a1 %>% head
test3=a1[,1:4]
a1 %>% summary()
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=scale(test3)%>% as.matrix()
test4=point_to_h(p,group=a1$V5)
plotjointh(test4,10,B=10)
test4=total
plotcom(test4,index=gr)
plotjointh(test4,10,B=10,index=gr)
plotjointh=function(x,b,...){
dda1=createh(data1=x,com=1,...)
dda2=createh(data1=x,com=2,...)
xmax=dda1[[1]] %>% unlist %>% max
xmin=dda1[[1]] %>% unlist %>% min
ymax=dda2[[1]] %>% unlist %>% max
ymin=dda2[[1]] %>% unlist %>% min
xr=seq(xmin,xmax,length.out = b)
yr=seq(ymin,ymax,length.out = b)
lastjoint=matrix(0,ncol=(length(yr)-1),nrow=(length(xr)-1))
par(mfrow=c(round(length(dda1[[1]])+1/2),2))
part=list()
for (s in 1:length(dda1[[1]])){
b1=list(breaks=dda1[[1]][[s]],counts=dda1[[2]][[s]])
b2=list(breaks=dda2[[1]][[s]],counts=dda2[[2]][[s]])
joint=matrix(0,ncol=(length(yr)-1),nrow=(length(xr)-1))
for (j in 1:(length(yr)-1)){
for (i in 1:(length(xr)-1)){
gg=0
allrange=(xr[i+1]-xr[i])*(yr[j+1]-yr[j])
for(p in 1:length(b1$counts)){
for(k in 1:length(b2$counts)){
aa=min(xr[i+1]-b1$breaks[p],b1$breaks[p+1]-xr[i])
if (aa<0) aa=0
bb=min(yr[j+1]-b2$breaks[k],b2$breaks[k+1]-yr[j])
if (bb<0) bb=0
if (b1$breaks[p]>=xr[i] & b1$breaks[p+1]<=xr[i+1]) aa=b1$breaks[p+1]-b1$breaks[p]
if (b1$breaks[p]<=xr[i] & b1$breaks[p+1]>=xr[i+1]) aa=xr[i+1]-xr[i]
if (b2$breaks[k]>=yr[j] & b2$breaks[k+1]<=yr[j+1]) bb=b2$breaks[k+1]-b2$breaks[k]
if (b2$breaks[k]<=yr[j] & b2$breaks[k+1]>=yr[j+1]) bb=yr[j+1]-yr[j]
coverratio=(aa*bb)/allrange
gg=gg+coverratio*b1$counts[p]*b2$counts[k]
}
}
joint[i,j]=gg
}
}
#part[[s]]=joint
mcol=c(rainbow(10, start=0, end=0.5),rainbow(190, start=0.5, end=0.7))
image(joint,col=mcol)
lastjoint=lastjoint+joint
}
mcol=c(rainbow(10, start=0, end=0.5),rainbow(190, start=0.5, end=0.7))
image(lastjoint,col=mcol)
}
a1=read.table('data_banknote_authentication.txt',sep=',')
a1 %>% head
test3=a1[,1:4]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=scale(test3) %>% as.matrix()
test4=point_to_h(p,group=a1$V5)
plotjointh(test4,10,B=10)
a1=read.table('transfusion.data',sep=',',skip = 2)
a1 %>% head
test3=a1[,1:4]
a1 %>% summary()
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=scale(test3)%>% as.matrix()
t1=t(p) %*% p
eig=eigen(t1)
plot(p %*% eig$vectors[,2],p %*% eig$vectors[,1],col=a1$V5+1)
p=test3 %>% as.matrix()
t1=t(p) %*% p
eig=eigen(t1)
dr1=p %*% eig$vectors[,1]
dr2=p %*% eig$vectors[,2]
test2=cbind(dr1,dr2)
image(des_e(test2,b=10))
#####################
test4=point_to_h(p,group=a1$V5)
plotjointh(test4,10,B=10)
source('paperfunction.R')
a1=read.table('wine.data',sep=',')
a1 %>% head
test3=a1[,11:14]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=scale(test3) %>% as.matrix()
test4=point_to_h(p,group=a1$V1)
plotjointh(test4,30,B=10)
a1=iris
test3=iris[,1:4]
#test3=iris[,1:4]
par(mfrow=c(1,1))
p=test3 %>% as.matrix()
test4=point_to_h(p,group=iris[,5])
plotcom(test4)
plotjointh(test4,10,B=10)
plotjointh(test4,10,B=10)
par(mfrow=c(2,2),mai=rep(.3,4))
plotjointh(test4,10,B=10)
plotjointh(test4,10,B=10,method='1')
plotjointh(test4,10,B=10)
