{
    "contents" : "x=hist(iris[,1])\nx\nclass(x)\nb=list()\nb[[1]]=1:9\nb[[2]]=1:8\nb[[3]]=(b$counts/diff(b$breaks))/sum(b$counts)\nb[[4]]=(b$breaks[1:8]+b$breaks[2:9])/2\nnames(b)=c(\"a\",\"b\")\nname=names(x)\nnames(b)=name[1]\nnames(b)=name[1:2]\nnames(b)=name[1:3]\nnames(b)=name[1:4]\nclass(b)=\"histogram\"\nplot(b)\n\n(x$counts/diff(x$breaks))/sum(x$counts)\n\ntotal=data2\n\nx=data2[[1]][[1]]\n\n####################################################### me\n\n\nhcalEX(data2)\nhcalvar(data2)\nsqrt(hcalvar(data2))\n  \n#########################################package test\npp=c(0,cumsum(a2))\nlibrary(HistDAWass)\nmydist<-distributionH(x=a1, p=pp)\nmeanH(mydist)\nstdH(mydist)\n\nmeanH(hist(iris[,1]))\n#############################################teacher code\nn=p=1\nBij=10\nmu <- numeric(p)\nfor(j in 1: p){\n  for(i in 1:n){                                            \n    px <- sum(a2*(a1[1:Bij]+\n                    a1[2:(Bij+1)]))\n    mu[j] <- mu[j] + px\n  }         \n  mu[j] <- mu[j]/(2*n)\n}\nmu\n\n\nmu <- numeric(p)\ns2 <- numeric(p)\nfor(j in 1: p){\n  for(i in 1:n){                            \n    ## mean            \n    px <- sum(a2*(a1[1:Bij]+\n                    a1[2:(Bij+1)]))\n    mu[j] <- mu[j] + px\n    \n    ## var\n    px <- sum(a2*(a1[1:Bij]^2+\n                    a1[2:(Bij+1)]^2+\n                    a1[1:Bij]*\n                    a1[2:(Bij+1)]))            \n    s2[j] <- s2[j] + px\n  }         \n  mu[j] <- mu[j]/(2*n)\n  s2[j] <- s2[j]/(3*n)-mu[j]^2\n}\n\nlist(mu=mu, s2=s2)\n#####################################################\n\n\n\nlibrary(gregmisc)\n\n\nimage.scale <- function(z, zlim, col = heat.colors(12),\n                        breaks, axis.pos=1, add.axis=TRUE, ...){\n  if(!missing(breaks)){\n    if(length(breaks) != (length(col)+1)){stop(\"must have one more break than colour\")}\n  }\n  if(missing(breaks) & !missing(zlim)){\n    breaks <- seq(zlim[1], zlim[2], length.out=(length(col)+1)) \n  }\n  if(missing(breaks) & missing(zlim)){\n    zlim <- range(z, na.rm=TRUE)\n    zlim[2] <- zlim[2]+c(zlim[2]-zlim[1])*(1E-3)#adds a bit to the range in both directions\n    zlim[1] <- zlim[1]-c(zlim[2]-zlim[1])*(1E-3)\n    breaks <- seq(zlim[1], zlim[2], length.out=(length(col)+1))\n  }\n  poly <- vector(mode=\"list\", length(col))\n  for(i in seq(poly)){\n    poly[[i]] <- c(breaks[i], breaks[i+1], breaks[i+1], breaks[i])\n  }\n  if(axis.pos %in% c(1,3)){ylim<-c(0,1); xlim<-range(breaks)}\n  if(axis.pos %in% c(2,4)){ylim<-range(breaks); xlim<-c(0,1)}\n  plot(1,1,t=\"n\",ylim=ylim, xlim=xlim, axes=FALSE, xlab=\"\", ylab=\"\", xaxs=\"i\", yaxs=\"i\", ...)  \n  for(i in seq(poly)){\n    if(axis.pos %in% c(1,3)){\n      polygon(poly[[i]], c(0,0,1,1), col=col[i], border=NA)\n    }\n    if(axis.pos %in% c(2,4)){\n      polygon(c(0,0,1,1), poly[[i]], col=col[i], border=NA)\n    }\n  }\n  box()\n  if(add.axis) {axis(axis.pos)}\n}\n\n\n\n",
    "created" : 1446618540055.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "82|64|112|0|\n",
    "hash" : "880590803",
    "id" : "8DBFC685",
    "lastKnownWriteTime" : 1446629374,
    "path" : "C:/Users/tsr/Desktop/2015-9-1-R/paper code/paper test.R",
    "project_path" : "paper test.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}